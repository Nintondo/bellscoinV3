define private i64 @mul32x32L(i32 %r2, i32 %r3)
{
%r4 = zext i32 %r2 to i64
%r5 = zext i32 %r3 to i64
%r6 = mul i64 %r4, %r5
ret i64 %r6
}
define private i32 @extractHigh32(i64 %r2)
{
%r3 = lshr i64 %r2, 32
%r4 = trunc i64 %r3 to i32
ret i32 %r4
}
define private i64 @mulPos32x32(i32* noalias  %r2, i32 %r3, i32 %r4)
{
%r5 = getelementptr i32, i32* %r2, i32 %r4
%r6 = load i32, i32* %r5
%r7 = call i64 @mul32x32L(i32 %r6, i32 %r3)
ret i64 %r7
}
define i192 @makeNIST_P192L()
{
%r8 = sub i64 0, 1
%r9 = sub i64 0, 2
%r10 = sub i64 0, 1
%r11 = zext i64 %r8 to i192
%r12 = zext i64 %r9 to i192
%r13 = zext i64 %r10 to i192
%r14 = shl i192 %r12, 64
%r15 = shl i192 %r13, 128
%r16 = add i192 %r11, %r14
%r17 = add i192 %r16, %r15
ret i192 %r17
}
define void @mcl_fpDbl_mod_NIST_P192L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = bitcast i32* %r2 to i192*
%r6 = load i192, i192* %r5
%r7 = zext i192 %r6 to i256
%r9 = getelementptr i32, i32* %r2, i32 6
%r11 = bitcast i32* %r9 to i192*
%r12 = load i192, i192* %r11
%r13 = zext i192 %r12 to i256
%r14 = shl i192 %r12, 64
%r15 = zext i192 %r14 to i256
%r16 = lshr i192 %r12, 128
%r17 = trunc i192 %r16 to i64
%r18 = zext i64 %r17 to i256
%r19 = or i256 %r15, %r18
%r20 = shl i256 %r18, 64
%r21 = add i256 %r7, %r13
%r22 = add i256 %r21, %r19
%r23 = add i256 %r22, %r20
%r24 = lshr i256 %r23, 192
%r25 = trunc i256 %r24 to i64
%r26 = zext i64 %r25 to i256
%r27 = shl i256 %r26, 64
%r28 = or i256 %r26, %r27
%r29 = trunc i256 %r23 to i192
%r30 = zext i192 %r29 to i256
%r31 = add i256 %r30, %r28
%r32 = call i192 @makeNIST_P192L()
%r33 = zext i192 %r32 to i256
%r34 = sub i256 %r31, %r33
%r35 = lshr i256 %r34, 192
%r36 = trunc i256 %r35 to i1
%r37 = select i1 %r36, i256 %r31, i256 %r34
%r38 = trunc i256 %r37 to i192
%r40 = bitcast i32* %r1 to i192*
store i192 %r38, i192* %r40
ret void
}
define void @mcl_fp_sqr_NIST_P192L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = alloca i32, i32 12
call void @mcl_fpDbl_sqrPre6L(i32* %r5, i32* %r2)
call void @mcl_fpDbl_mod_NIST_P192L(i32* %r1, i32* %r5, i32* %r5)
ret void
}
define void @mcl_fp_mulNIST_P192L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = alloca i32, i32 12
call void @mcl_fpDbl_mulPre6L(i32* %r6, i32* %r2, i32* %r3)
call void @mcl_fpDbl_mod_NIST_P192L(i32* %r1, i32* %r6, i32* %r6)
ret void
}
define void @mcl_fpDbl_mod_NIST_P521L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = bitcast i32* %r2 to i1056*
%r6 = load i1056, i1056* %r5
%r7 = trunc i1056 %r6 to i521
%r8 = zext i521 %r7 to i544
%r9 = lshr i1056 %r6, 521
%r10 = trunc i1056 %r9 to i544
%r11 = add i544 %r8, %r10
%r12 = lshr i544 %r11, 521
%r14 = and i544 %r12, 1
%r15 = add i544 %r11, %r14
%r16 = trunc i544 %r15 to i521
%r17 = zext i521 %r16 to i544
%r18 = lshr i544 %r17, 512
%r19 = trunc i544 %r18 to i32
%r21 = or i32 %r19, -512
%r22 = lshr i544 %r17, 0
%r23 = trunc i544 %r22 to i32
%r24 = and i32 %r21, %r23
%r25 = lshr i544 %r17, 32
%r26 = trunc i544 %r25 to i32
%r27 = and i32 %r24, %r26
%r28 = lshr i544 %r17, 64
%r29 = trunc i544 %r28 to i32
%r30 = and i32 %r27, %r29
%r31 = lshr i544 %r17, 96
%r32 = trunc i544 %r31 to i32
%r33 = and i32 %r30, %r32
%r34 = lshr i544 %r17, 128
%r35 = trunc i544 %r34 to i32
%r36 = and i32 %r33, %r35
%r37 = lshr i544 %r17, 160
%r38 = trunc i544 %r37 to i32
%r39 = and i32 %r36, %r38
%r40 = lshr i544 %r17, 192
%r41 = trunc i544 %r40 to i32
%r42 = and i32 %r39, %r41
%r43 = lshr i544 %r17, 224
%r44 = trunc i544 %r43 to i32
%r45 = and i32 %r42, %r44
%r46 = lshr i544 %r17, 256
%r47 = trunc i544 %r46 to i32
%r48 = and i32 %r45, %r47
%r49 = lshr i544 %r17, 288
%r50 = trunc i544 %r49 to i32
%r51 = and i32 %r48, %r50
%r52 = lshr i544 %r17, 320
%r53 = trunc i544 %r52 to i32
%r54 = and i32 %r51, %r53
%r55 = lshr i544 %r17, 352
%r56 = trunc i544 %r55 to i32
%r57 = and i32 %r54, %r56
%r58 = lshr i544 %r17, 384
%r59 = trunc i544 %r58 to i32
%r60 = and i32 %r57, %r59
%r61 = lshr i544 %r17, 416
%r62 = trunc i544 %r61 to i32
%r63 = and i32 %r60, %r62
%r64 = lshr i544 %r17, 448
%r65 = trunc i544 %r64 to i32
%r66 = and i32 %r63, %r65
%r67 = lshr i544 %r17, 480
%r68 = trunc i544 %r67 to i32
%r69 = and i32 %r66, %r68
%r71 = icmp eq i32 %r69, -1
br i1%r71, label %zero, label %nonzero
zero:
store i32 0, i32* %r1
%r75 = getelementptr i32, i32* %r1, i32 1
store i32 0, i32* %r75
%r78 = getelementptr i32, i32* %r1, i32 2
store i32 0, i32* %r78
%r81 = getelementptr i32, i32* %r1, i32 3
store i32 0, i32* %r81
%r84 = getelementptr i32, i32* %r1, i32 4
store i32 0, i32* %r84
%r87 = getelementptr i32, i32* %r1, i32 5
store i32 0, i32* %r87
%r90 = getelementptr i32, i32* %r1, i32 6
store i32 0, i32* %r90
%r93 = getelementptr i32, i32* %r1, i32 7
store i32 0, i32* %r93
%r96 = getelementptr i32, i32* %r1, i32 8
store i32 0, i32* %r96
%r99 = getelementptr i32, i32* %r1, i32 9
store i32 0, i32* %r99
%r102 = getelementptr i32, i32* %r1, i32 10
store i32 0, i32* %r102
%r105 = getelementptr i32, i32* %r1, i32 11
store i32 0, i32* %r105
%r108 = getelementptr i32, i32* %r1, i32 12
store i32 0, i32* %r108
%r111 = getelementptr i32, i32* %r1, i32 13
store i32 0, i32* %r111
%r114 = getelementptr i32, i32* %r1, i32 14
store i32 0, i32* %r114
%r117 = getelementptr i32, i32* %r1, i32 15
store i32 0, i32* %r117
%r120 = getelementptr i32, i32* %r1, i32 16
store i32 0, i32* %r120
ret void
nonzero:
%r122 = bitcast i32* %r1 to i544*
store i544 %r17, i544* %r122
ret void
}
define i224 @mulPv192x32(i32* noalias  %r2, i32 %r3)
{
%r5 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 0)
%r6 = trunc i64 %r5 to i32
%r7 = call i32 @extractHigh32(i64 %r5)
%r9 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 1)
%r10 = trunc i64 %r9 to i32
%r11 = call i32 @extractHigh32(i64 %r9)
%r13 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 2)
%r14 = trunc i64 %r13 to i32
%r15 = call i32 @extractHigh32(i64 %r13)
%r17 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 3)
%r18 = trunc i64 %r17 to i32
%r19 = call i32 @extractHigh32(i64 %r17)
%r21 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 4)
%r22 = trunc i64 %r21 to i32
%r23 = call i32 @extractHigh32(i64 %r21)
%r25 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 5)
%r26 = trunc i64 %r25 to i32
%r27 = call i32 @extractHigh32(i64 %r25)
%r28 = zext i32 %r6 to i64
%r29 = zext i32 %r10 to i64
%r30 = shl i64 %r29, 32
%r31 = or i64 %r28, %r30
%r32 = zext i64 %r31 to i96
%r33 = zext i32 %r14 to i96
%r34 = shl i96 %r33, 64
%r35 = or i96 %r32, %r34
%r36 = zext i96 %r35 to i128
%r37 = zext i32 %r18 to i128
%r38 = shl i128 %r37, 96
%r39 = or i128 %r36, %r38
%r40 = zext i128 %r39 to i160
%r41 = zext i32 %r22 to i160
%r42 = shl i160 %r41, 128
%r43 = or i160 %r40, %r42
%r44 = zext i160 %r43 to i192
%r45 = zext i32 %r26 to i192
%r46 = shl i192 %r45, 160
%r47 = or i192 %r44, %r46
%r48 = zext i32 %r7 to i64
%r49 = zext i32 %r11 to i64
%r50 = shl i64 %r49, 32
%r51 = or i64 %r48, %r50
%r52 = zext i64 %r51 to i96
%r53 = zext i32 %r15 to i96
%r54 = shl i96 %r53, 64
%r55 = or i96 %r52, %r54
%r56 = zext i96 %r55 to i128
%r57 = zext i32 %r19 to i128
%r58 = shl i128 %r57, 96
%r59 = or i128 %r56, %r58
%r60 = zext i128 %r59 to i160
%r61 = zext i32 %r23 to i160
%r62 = shl i160 %r61, 128
%r63 = or i160 %r60, %r62
%r64 = zext i160 %r63 to i192
%r65 = zext i32 %r27 to i192
%r66 = shl i192 %r65, 160
%r67 = or i192 %r64, %r66
%r68 = zext i192 %r47 to i224
%r69 = zext i192 %r67 to i224
%r70 = shl i224 %r69, 32
%r71 = add i224 %r68, %r70
ret i224 %r71
}
define void @mcl_fpDbl_mulPre6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r4 = load i32, i32* %r3
%r5 = call i224 @mulPv192x32(i32* %r2, i32 %r4)
%r6 = trunc i224 %r5 to i32
store i32 %r6, i32* %r1
%r7 = lshr i224 %r5, 32
%r9 = getelementptr i32, i32* %r3, i32 1
%r10 = load i32, i32* %r9
%r11 = call i224 @mulPv192x32(i32* %r2, i32 %r10)
%r12 = add i224 %r7, %r11
%r13 = trunc i224 %r12 to i32
%r15 = getelementptr i32, i32* %r1, i32 1
store i32 %r13, i32* %r15
%r16 = lshr i224 %r12, 32
%r18 = getelementptr i32, i32* %r3, i32 2
%r19 = load i32, i32* %r18
%r20 = call i224 @mulPv192x32(i32* %r2, i32 %r19)
%r21 = add i224 %r16, %r20
%r22 = trunc i224 %r21 to i32
%r24 = getelementptr i32, i32* %r1, i32 2
store i32 %r22, i32* %r24
%r25 = lshr i224 %r21, 32
%r27 = getelementptr i32, i32* %r3, i32 3
%r28 = load i32, i32* %r27
%r29 = call i224 @mulPv192x32(i32* %r2, i32 %r28)
%r30 = add i224 %r25, %r29
%r31 = trunc i224 %r30 to i32
%r33 = getelementptr i32, i32* %r1, i32 3
store i32 %r31, i32* %r33
%r34 = lshr i224 %r30, 32
%r36 = getelementptr i32, i32* %r3, i32 4
%r37 = load i32, i32* %r36
%r38 = call i224 @mulPv192x32(i32* %r2, i32 %r37)
%r39 = add i224 %r34, %r38
%r40 = trunc i224 %r39 to i32
%r42 = getelementptr i32, i32* %r1, i32 4
store i32 %r40, i32* %r42
%r43 = lshr i224 %r39, 32
%r45 = getelementptr i32, i32* %r3, i32 5
%r46 = load i32, i32* %r45
%r47 = call i224 @mulPv192x32(i32* %r2, i32 %r46)
%r48 = add i224 %r43, %r47
%r50 = getelementptr i32, i32* %r1, i32 5
%r52 = bitcast i32* %r50 to i224*
store i224 %r48, i224* %r52
ret void
}
define void @mcl_fpDbl_sqrPre6L(i32* noalias  %r1, i32* noalias  %r2)
{
%r3 = load i32, i32* %r2
%r4 = call i224 @mulPv192x32(i32* %r2, i32 %r3)
%r5 = trunc i224 %r4 to i32
store i32 %r5, i32* %r1
%r6 = lshr i224 %r4, 32
%r8 = getelementptr i32, i32* %r2, i32 1
%r9 = load i32, i32* %r8
%r10 = call i224 @mulPv192x32(i32* %r2, i32 %r9)
%r11 = add i224 %r6, %r10
%r12 = trunc i224 %r11 to i32
%r14 = getelementptr i32, i32* %r1, i32 1
store i32 %r12, i32* %r14
%r15 = lshr i224 %r11, 32
%r17 = getelementptr i32, i32* %r2, i32 2
%r18 = load i32, i32* %r17
%r19 = call i224 @mulPv192x32(i32* %r2, i32 %r18)
%r20 = add i224 %r15, %r19
%r21 = trunc i224 %r20 to i32
%r23 = getelementptr i32, i32* %r1, i32 2
store i32 %r21, i32* %r23
%r24 = lshr i224 %r20, 32
%r26 = getelementptr i32, i32* %r2, i32 3
%r27 = load i32, i32* %r26
%r28 = call i224 @mulPv192x32(i32* %r2, i32 %r27)
%r29 = add i224 %r24, %r28
%r30 = trunc i224 %r29 to i32
%r32 = getelementptr i32, i32* %r1, i32 3
store i32 %r30, i32* %r32
%r33 = lshr i224 %r29, 32
%r35 = getelementptr i32, i32* %r2, i32 4
%r36 = load i32, i32* %r35
%r37 = call i224 @mulPv192x32(i32* %r2, i32 %r36)
%r38 = add i224 %r33, %r37
%r39 = trunc i224 %r38 to i32
%r41 = getelementptr i32, i32* %r1, i32 4
store i32 %r39, i32* %r41
%r42 = lshr i224 %r38, 32
%r44 = getelementptr i32, i32* %r2, i32 5
%r45 = load i32, i32* %r44
%r46 = call i224 @mulPv192x32(i32* %r2, i32 %r45)
%r47 = add i224 %r42, %r46
%r49 = getelementptr i32, i32* %r1, i32 5
%r51 = bitcast i32* %r49 to i224*
store i224 %r47, i224* %r51
ret void
}
define void @mcl_fp_mont6L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r9 = getelementptr i32, i32* %r3, i32 0
%r10 = load i32, i32* %r9
%r11 = call i224 @mulPv192x32(i32* %r2, i32 %r10)
%r12 = zext i224 %r11 to i256
%r13 = trunc i224 %r11 to i32
%r14 = mul i32 %r13, %r7
%r15 = call i224 @mulPv192x32(i32* %r4, i32 %r14)
%r16 = zext i224 %r15 to i256
%r17 = add i256 %r12, %r16
%r18 = lshr i256 %r17, 32
%r20 = getelementptr i32, i32* %r3, i32 1
%r21 = load i32, i32* %r20
%r22 = call i224 @mulPv192x32(i32* %r2, i32 %r21)
%r23 = zext i224 %r22 to i256
%r24 = add i256 %r18, %r23
%r25 = trunc i256 %r24 to i32
%r26 = mul i32 %r25, %r7
%r27 = call i224 @mulPv192x32(i32* %r4, i32 %r26)
%r28 = zext i224 %r27 to i256
%r29 = add i256 %r24, %r28
%r30 = lshr i256 %r29, 32
%r32 = getelementptr i32, i32* %r3, i32 2
%r33 = load i32, i32* %r32
%r34 = call i224 @mulPv192x32(i32* %r2, i32 %r33)
%r35 = zext i224 %r34 to i256
%r36 = add i256 %r30, %r35
%r37 = trunc i256 %r36 to i32
%r38 = mul i32 %r37, %r7
%r39 = call i224 @mulPv192x32(i32* %r4, i32 %r38)
%r40 = zext i224 %r39 to i256
%r41 = add i256 %r36, %r40
%r42 = lshr i256 %r41, 32
%r44 = getelementptr i32, i32* %r3, i32 3
%r45 = load i32, i32* %r44
%r46 = call i224 @mulPv192x32(i32* %r2, i32 %r45)
%r47 = zext i224 %r46 to i256
%r48 = add i256 %r42, %r47
%r49 = trunc i256 %r48 to i32
%r50 = mul i32 %r49, %r7
%r51 = call i224 @mulPv192x32(i32* %r4, i32 %r50)
%r52 = zext i224 %r51 to i256
%r53 = add i256 %r48, %r52
%r54 = lshr i256 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 4
%r57 = load i32, i32* %r56
%r58 = call i224 @mulPv192x32(i32* %r2, i32 %r57)
%r59 = zext i224 %r58 to i256
%r60 = add i256 %r54, %r59
%r61 = trunc i256 %r60 to i32
%r62 = mul i32 %r61, %r7
%r63 = call i224 @mulPv192x32(i32* %r4, i32 %r62)
%r64 = zext i224 %r63 to i256
%r65 = add i256 %r60, %r64
%r66 = lshr i256 %r65, 32
%r68 = getelementptr i32, i32* %r3, i32 5
%r69 = load i32, i32* %r68
%r70 = call i224 @mulPv192x32(i32* %r2, i32 %r69)
%r71 = zext i224 %r70 to i256
%r72 = add i256 %r66, %r71
%r73 = trunc i256 %r72 to i32
%r74 = mul i32 %r73, %r7
%r75 = call i224 @mulPv192x32(i32* %r4, i32 %r74)
%r76 = zext i224 %r75 to i256
%r77 = add i256 %r72, %r76
%r78 = lshr i256 %r77, 32
%r79 = trunc i256 %r78 to i224
%r81 = bitcast i32* %r4 to i192*
%r82 = load i192, i192* %r81
%r83 = zext i192 %r82 to i224
%r84 = sub i224 %r79, %r83
%r85 = lshr i224 %r84, 192
%r86 = trunc i224 %r85 to i1
%r87 = select i1 %r86, i224 %r79, i224 %r84
%r88 = trunc i224 %r87 to i192
%r90 = bitcast i32* %r1 to i192*
store i192 %r88, i192* %r90
ret void
}
define void @mcl_fp_montNF6L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r8 = load i32, i32* %r3
%r9 = call i224 @mulPv192x32(i32* %r2, i32 %r8)
%r10 = trunc i224 %r9 to i32
%r11 = mul i32 %r10, %r7
%r12 = call i224 @mulPv192x32(i32* %r4, i32 %r11)
%r13 = add i224 %r9, %r12
%r14 = lshr i224 %r13, 32
%r16 = getelementptr i32, i32* %r3, i32 1
%r17 = load i32, i32* %r16
%r18 = call i224 @mulPv192x32(i32* %r2, i32 %r17)
%r19 = add i224 %r14, %r18
%r20 = trunc i224 %r19 to i32
%r21 = mul i32 %r20, %r7
%r22 = call i224 @mulPv192x32(i32* %r4, i32 %r21)
%r23 = add i224 %r19, %r22
%r24 = lshr i224 %r23, 32
%r26 = getelementptr i32, i32* %r3, i32 2
%r27 = load i32, i32* %r26
%r28 = call i224 @mulPv192x32(i32* %r2, i32 %r27)
%r29 = add i224 %r24, %r28
%r30 = trunc i224 %r29 to i32
%r31 = mul i32 %r30, %r7
%r32 = call i224 @mulPv192x32(i32* %r4, i32 %r31)
%r33 = add i224 %r29, %r32
%r34 = lshr i224 %r33, 32
%r36 = getelementptr i32, i32* %r3, i32 3
%r37 = load i32, i32* %r36
%r38 = call i224 @mulPv192x32(i32* %r2, i32 %r37)
%r39 = add i224 %r34, %r38
%r40 = trunc i224 %r39 to i32
%r41 = mul i32 %r40, %r7
%r42 = call i224 @mulPv192x32(i32* %r4, i32 %r41)
%r43 = add i224 %r39, %r42
%r44 = lshr i224 %r43, 32
%r46 = getelementptr i32, i32* %r3, i32 4
%r47 = load i32, i32* %r46
%r48 = call i224 @mulPv192x32(i32* %r2, i32 %r47)
%r49 = add i224 %r44, %r48
%r50 = trunc i224 %r49 to i32
%r51 = mul i32 %r50, %r7
%r52 = call i224 @mulPv192x32(i32* %r4, i32 %r51)
%r53 = add i224 %r49, %r52
%r54 = lshr i224 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 5
%r57 = load i32, i32* %r56
%r58 = call i224 @mulPv192x32(i32* %r2, i32 %r57)
%r59 = add i224 %r54, %r58
%r60 = trunc i224 %r59 to i32
%r61 = mul i32 %r60, %r7
%r62 = call i224 @mulPv192x32(i32* %r4, i32 %r61)
%r63 = add i224 %r59, %r62
%r64 = lshr i224 %r63, 32
%r65 = trunc i224 %r64 to i192
%r67 = bitcast i32* %r4 to i192*
%r68 = load i192, i192* %r67
%r69 = sub i192 %r65, %r68
%r70 = lshr i192 %r69, 191
%r71 = trunc i192 %r70 to i1
%r72 = select i1 %r71, i192 %r65, i192 %r69
%r74 = bitcast i32* %r1 to i192*
store i192 %r72, i192* %r74
ret void
}
define void @mcl_fp_montRed6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i192*
%r9 = load i192, i192* %r8
%r11 = bitcast i32* %r2 to i192*
%r12 = load i192, i192* %r11
%r13 = trunc i192 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i224 @mulPv192x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 6
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i224
%r20 = shl i224 %r19, 192
%r21 = zext i192 %r12 to i224
%r22 = or i224 %r20, %r21
%r23 = zext i224 %r22 to i256
%r24 = zext i224 %r15 to i256
%r25 = add i256 %r23, %r24
%r26 = lshr i256 %r25, 32
%r27 = trunc i256 %r26 to i224
%r28 = lshr i224 %r27, 192
%r29 = trunc i224 %r28 to i32
%r30 = trunc i224 %r27 to i192
%r31 = trunc i192 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i224 @mulPv192x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i224
%r35 = shl i224 %r34, 192
%r36 = add i224 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 7
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i224
%r41 = shl i224 %r40, 192
%r42 = zext i192 %r30 to i224
%r43 = or i224 %r41, %r42
%r44 = zext i224 %r43 to i256
%r45 = zext i224 %r36 to i256
%r46 = add i256 %r44, %r45
%r47 = lshr i256 %r46, 32
%r48 = trunc i256 %r47 to i224
%r49 = lshr i224 %r48, 192
%r50 = trunc i224 %r49 to i32
%r51 = trunc i224 %r48 to i192
%r52 = trunc i192 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i224 @mulPv192x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i224
%r56 = shl i224 %r55, 192
%r57 = add i224 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 8
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i224
%r62 = shl i224 %r61, 192
%r63 = zext i192 %r51 to i224
%r64 = or i224 %r62, %r63
%r65 = zext i224 %r64 to i256
%r66 = zext i224 %r57 to i256
%r67 = add i256 %r65, %r66
%r68 = lshr i256 %r67, 32
%r69 = trunc i256 %r68 to i224
%r70 = lshr i224 %r69, 192
%r71 = trunc i224 %r70 to i32
%r72 = trunc i224 %r69 to i192
%r73 = trunc i192 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i224 @mulPv192x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i224
%r77 = shl i224 %r76, 192
%r78 = add i224 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 9
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i224
%r83 = shl i224 %r82, 192
%r84 = zext i192 %r72 to i224
%r85 = or i224 %r83, %r84
%r86 = zext i224 %r85 to i256
%r87 = zext i224 %r78 to i256
%r88 = add i256 %r86, %r87
%r89 = lshr i256 %r88, 32
%r90 = trunc i256 %r89 to i224
%r91 = lshr i224 %r90, 192
%r92 = trunc i224 %r91 to i32
%r93 = trunc i224 %r90 to i192
%r94 = trunc i192 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i224 @mulPv192x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i224
%r98 = shl i224 %r97, 192
%r99 = add i224 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 10
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i224
%r104 = shl i224 %r103, 192
%r105 = zext i192 %r93 to i224
%r106 = or i224 %r104, %r105
%r107 = zext i224 %r106 to i256
%r108 = zext i224 %r99 to i256
%r109 = add i256 %r107, %r108
%r110 = lshr i256 %r109, 32
%r111 = trunc i256 %r110 to i224
%r112 = lshr i224 %r111, 192
%r113 = trunc i224 %r112 to i32
%r114 = trunc i224 %r111 to i192
%r115 = trunc i192 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i224 @mulPv192x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i224
%r119 = shl i224 %r118, 192
%r120 = add i224 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 11
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i224
%r125 = shl i224 %r124, 192
%r126 = zext i192 %r114 to i224
%r127 = or i224 %r125, %r126
%r128 = zext i224 %r127 to i256
%r129 = zext i224 %r120 to i256
%r130 = add i256 %r128, %r129
%r131 = lshr i256 %r130, 32
%r132 = trunc i256 %r131 to i224
%r133 = lshr i224 %r132, 192
%r134 = trunc i224 %r133 to i32
%r135 = trunc i224 %r132 to i192
%r136 = zext i192 %r9 to i224
%r137 = zext i32 %r134 to i224
%r138 = shl i224 %r137, 192
%r139 = zext i192 %r135 to i224
%r140 = or i224 %r138, %r139
%r141 = sub i224 %r140, %r136
%r142 = lshr i224 %r141, 192
%r143 = trunc i224 %r142 to i1
%r144 = select i1 %r143, i224 %r140, i224 %r141
%r145 = trunc i224 %r144 to i192
%r147 = bitcast i32* %r1 to i192*
store i192 %r145, i192* %r147
ret void
}
define void @mcl_fp_montRedNF6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i192*
%r9 = load i192, i192* %r8
%r11 = bitcast i32* %r2 to i192*
%r12 = load i192, i192* %r11
%r13 = trunc i192 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i224 @mulPv192x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 6
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i224
%r20 = shl i224 %r19, 192
%r21 = zext i192 %r12 to i224
%r22 = or i224 %r20, %r21
%r23 = zext i224 %r22 to i256
%r24 = zext i224 %r15 to i256
%r25 = add i256 %r23, %r24
%r26 = lshr i256 %r25, 32
%r27 = trunc i256 %r26 to i224
%r28 = lshr i224 %r27, 192
%r29 = trunc i224 %r28 to i32
%r30 = trunc i224 %r27 to i192
%r31 = trunc i192 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i224 @mulPv192x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i224
%r35 = shl i224 %r34, 192
%r36 = add i224 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 7
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i224
%r41 = shl i224 %r40, 192
%r42 = zext i192 %r30 to i224
%r43 = or i224 %r41, %r42
%r44 = zext i224 %r43 to i256
%r45 = zext i224 %r36 to i256
%r46 = add i256 %r44, %r45
%r47 = lshr i256 %r46, 32
%r48 = trunc i256 %r47 to i224
%r49 = lshr i224 %r48, 192
%r50 = trunc i224 %r49 to i32
%r51 = trunc i224 %r48 to i192
%r52 = trunc i192 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i224 @mulPv192x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i224
%r56 = shl i224 %r55, 192
%r57 = add i224 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 8
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i224
%r62 = shl i224 %r61, 192
%r63 = zext i192 %r51 to i224
%r64 = or i224 %r62, %r63
%r65 = zext i224 %r64 to i256
%r66 = zext i224 %r57 to i256
%r67 = add i256 %r65, %r66
%r68 = lshr i256 %r67, 32
%r69 = trunc i256 %r68 to i224
%r70 = lshr i224 %r69, 192
%r71 = trunc i224 %r70 to i32
%r72 = trunc i224 %r69 to i192
%r73 = trunc i192 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i224 @mulPv192x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i224
%r77 = shl i224 %r76, 192
%r78 = add i224 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 9
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i224
%r83 = shl i224 %r82, 192
%r84 = zext i192 %r72 to i224
%r85 = or i224 %r83, %r84
%r86 = zext i224 %r85 to i256
%r87 = zext i224 %r78 to i256
%r88 = add i256 %r86, %r87
%r89 = lshr i256 %r88, 32
%r90 = trunc i256 %r89 to i224
%r91 = lshr i224 %r90, 192
%r92 = trunc i224 %r91 to i32
%r93 = trunc i224 %r90 to i192
%r94 = trunc i192 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i224 @mulPv192x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i224
%r98 = shl i224 %r97, 192
%r99 = add i224 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 10
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i224
%r104 = shl i224 %r103, 192
%r105 = zext i192 %r93 to i224
%r106 = or i224 %r104, %r105
%r107 = zext i224 %r106 to i256
%r108 = zext i224 %r99 to i256
%r109 = add i256 %r107, %r108
%r110 = lshr i256 %r109, 32
%r111 = trunc i256 %r110 to i224
%r112 = lshr i224 %r111, 192
%r113 = trunc i224 %r112 to i32
%r114 = trunc i224 %r111 to i192
%r115 = trunc i192 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i224 @mulPv192x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i224
%r119 = shl i224 %r118, 192
%r120 = add i224 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 11
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i224
%r125 = shl i224 %r124, 192
%r126 = zext i192 %r114 to i224
%r127 = or i224 %r125, %r126
%r128 = zext i224 %r127 to i256
%r129 = zext i224 %r120 to i256
%r130 = add i256 %r128, %r129
%r131 = lshr i256 %r130, 32
%r132 = trunc i256 %r131 to i224
%r133 = lshr i224 %r132, 192
%r134 = trunc i224 %r133 to i32
%r135 = trunc i224 %r132 to i192
%r136 = sub i192 %r135, %r9
%r137 = lshr i192 %r136, 191
%r138 = trunc i192 %r137 to i1
%r139 = select i1 %r138, i192 %r135, i192 %r136
%r141 = bitcast i32* %r1 to i192*
store i192 %r139, i192* %r141
ret void
}
define i32 @mcl_fp_addPre6L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i192*
%r7 = load i192, i192* %r6
%r8 = zext i192 %r7 to i224
%r10 = bitcast i32* %r4 to i192*
%r11 = load i192, i192* %r10
%r12 = zext i192 %r11 to i224
%r13 = add i224 %r8, %r12
%r14 = trunc i224 %r13 to i192
%r16 = bitcast i32* %r2 to i192*
store i192 %r14, i192* %r16
%r17 = lshr i224 %r13, 192
%r18 = trunc i224 %r17 to i32
ret i32 %r18
}
define i32 @mcl_fp_subPre6L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i192*
%r7 = load i192, i192* %r6
%r8 = zext i192 %r7 to i224
%r10 = bitcast i32* %r4 to i192*
%r11 = load i192, i192* %r10
%r12 = zext i192 %r11 to i224
%r13 = sub i224 %r8, %r12
%r14 = trunc i224 %r13 to i192
%r16 = bitcast i32* %r2 to i192*
store i192 %r14, i192* %r16
%r18 = lshr i224 %r13, 192
%r19 = trunc i224 %r18 to i32
%r20 = and i32 %r19, 1
ret i32 %r20
}
define void @mcl_fp_shr1_6L(i32* noalias  %r1, i32* noalias  %r2)
{
%r4 = bitcast i32* %r2 to i192*
%r5 = load i192, i192* %r4
%r6 = lshr i192 %r5, 1
%r8 = bitcast i32* %r1 to i192*
store i192 %r6, i192* %r8
ret void
}
define void @mcl_fp_add6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i192*
%r7 = load i192, i192* %r6
%r9 = bitcast i32* %r3 to i192*
%r10 = load i192, i192* %r9
%r11 = zext i192 %r7 to i224
%r12 = zext i192 %r10 to i224
%r13 = add i224 %r11, %r12
%r15 = bitcast i32* %r4 to i192*
%r16 = load i192, i192* %r15
%r17 = zext i192 %r16 to i224
%r18 = sub i224 %r13, %r17
%r19 = lshr i224 %r18, 192
%r20 = trunc i224 %r19 to i1
%r21 = select i1 %r20, i224 %r13, i224 %r18
%r22 = trunc i224 %r21 to i192
%r24 = bitcast i32* %r1 to i192*
store i192 %r22, i192* %r24
ret void
}
define void @mcl_fp_addNF6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i192*
%r7 = load i192, i192* %r6
%r9 = bitcast i32* %r3 to i192*
%r10 = load i192, i192* %r9
%r11 = add i192 %r7, %r10
%r13 = bitcast i32* %r4 to i192*
%r14 = load i192, i192* %r13
%r15 = sub i192 %r11, %r14
%r16 = lshr i192 %r15, 191
%r17 = trunc i192 %r16 to i1
%r18 = select i1 %r17, i192 %r11, i192 %r15
%r20 = bitcast i32* %r1 to i192*
store i192 %r18, i192* %r20
ret void
}
define void @mcl_fp_sub6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i192*
%r7 = load i192, i192* %r6
%r9 = bitcast i32* %r3 to i192*
%r10 = load i192, i192* %r9
%r11 = zext i192 %r7 to i193
%r12 = zext i192 %r10 to i193
%r13 = sub i193 %r11, %r12
%r14 = lshr i193 %r13, 192
%r15 = trunc i193 %r14 to i1
%r16 = trunc i193 %r13 to i192
%r18 = bitcast i32* %r4 to i192*
%r19 = load i192, i192* %r18
%r21 = select i1 %r15, i192 %r19, i192 0
%r22 = add i192 %r16, %r21
%r24 = bitcast i32* %r1 to i192*
store i192 %r22, i192* %r24
ret void
}
define void @mcl_fp_subNF6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i192*
%r7 = load i192, i192* %r6
%r9 = bitcast i32* %r3 to i192*
%r10 = load i192, i192* %r9
%r11 = sub i192 %r7, %r10
%r12 = lshr i192 %r11, 191
%r13 = trunc i192 %r12 to i1
%r15 = bitcast i32* %r4 to i192*
%r16 = load i192, i192* %r15
%r18 = select i1 %r13, i192 %r16, i192 0
%r19 = add i192 %r11, %r18
%r21 = bitcast i32* %r1 to i192*
store i192 %r19, i192* %r21
ret void
}
define void @mcl_fpDbl_add6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = zext i384 %r7 to i416
%r12 = zext i384 %r10 to i416
%r13 = add i416 %r11, %r12
%r14 = trunc i416 %r13 to i192
%r16 = bitcast i32* %r1 to i192*
store i192 %r14, i192* %r16
%r17 = lshr i416 %r13, 192
%r18 = trunc i416 %r17 to i224
%r20 = bitcast i32* %r4 to i192*
%r21 = load i192, i192* %r20
%r22 = zext i192 %r21 to i224
%r23 = sub i224 %r18, %r22
%r24 = lshr i224 %r23, 192
%r25 = trunc i224 %r24 to i1
%r26 = select i1 %r25, i224 %r18, i224 %r23
%r27 = trunc i224 %r26 to i192
%r29 = getelementptr i32, i32* %r1, i32 6
%r31 = bitcast i32* %r29 to i192*
store i192 %r27, i192* %r31
ret void
}
define void @mcl_fpDbl_sub6L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = zext i384 %r7 to i416
%r12 = zext i384 %r10 to i416
%r13 = sub i416 %r11, %r12
%r14 = trunc i416 %r13 to i192
%r16 = bitcast i32* %r1 to i192*
store i192 %r14, i192* %r16
%r17 = lshr i416 %r13, 192
%r18 = trunc i416 %r17 to i192
%r19 = lshr i416 %r13, 384
%r20 = trunc i416 %r19 to i1
%r22 = bitcast i32* %r4 to i192*
%r23 = load i192, i192* %r22
%r25 = select i1 %r20, i192 %r23, i192 0
%r26 = add i192 %r18, %r25
%r28 = getelementptr i32, i32* %r1, i32 6
%r30 = bitcast i32* %r28 to i192*
store i192 %r26, i192* %r30
ret void
}
define i256 @mulPv224x32(i32* noalias  %r2, i32 %r3)
{
%r5 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 0)
%r6 = trunc i64 %r5 to i32
%r7 = call i32 @extractHigh32(i64 %r5)
%r9 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 1)
%r10 = trunc i64 %r9 to i32
%r11 = call i32 @extractHigh32(i64 %r9)
%r13 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 2)
%r14 = trunc i64 %r13 to i32
%r15 = call i32 @extractHigh32(i64 %r13)
%r17 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 3)
%r18 = trunc i64 %r17 to i32
%r19 = call i32 @extractHigh32(i64 %r17)
%r21 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 4)
%r22 = trunc i64 %r21 to i32
%r23 = call i32 @extractHigh32(i64 %r21)
%r25 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 5)
%r26 = trunc i64 %r25 to i32
%r27 = call i32 @extractHigh32(i64 %r25)
%r29 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 6)
%r30 = trunc i64 %r29 to i32
%r31 = call i32 @extractHigh32(i64 %r29)
%r32 = zext i32 %r6 to i64
%r33 = zext i32 %r10 to i64
%r34 = shl i64 %r33, 32
%r35 = or i64 %r32, %r34
%r36 = zext i64 %r35 to i96
%r37 = zext i32 %r14 to i96
%r38 = shl i96 %r37, 64
%r39 = or i96 %r36, %r38
%r40 = zext i96 %r39 to i128
%r41 = zext i32 %r18 to i128
%r42 = shl i128 %r41, 96
%r43 = or i128 %r40, %r42
%r44 = zext i128 %r43 to i160
%r45 = zext i32 %r22 to i160
%r46 = shl i160 %r45, 128
%r47 = or i160 %r44, %r46
%r48 = zext i160 %r47 to i192
%r49 = zext i32 %r26 to i192
%r50 = shl i192 %r49, 160
%r51 = or i192 %r48, %r50
%r52 = zext i192 %r51 to i224
%r53 = zext i32 %r30 to i224
%r54 = shl i224 %r53, 192
%r55 = or i224 %r52, %r54
%r56 = zext i32 %r7 to i64
%r57 = zext i32 %r11 to i64
%r58 = shl i64 %r57, 32
%r59 = or i64 %r56, %r58
%r60 = zext i64 %r59 to i96
%r61 = zext i32 %r15 to i96
%r62 = shl i96 %r61, 64
%r63 = or i96 %r60, %r62
%r64 = zext i96 %r63 to i128
%r65 = zext i32 %r19 to i128
%r66 = shl i128 %r65, 96
%r67 = or i128 %r64, %r66
%r68 = zext i128 %r67 to i160
%r69 = zext i32 %r23 to i160
%r70 = shl i160 %r69, 128
%r71 = or i160 %r68, %r70
%r72 = zext i160 %r71 to i192
%r73 = zext i32 %r27 to i192
%r74 = shl i192 %r73, 160
%r75 = or i192 %r72, %r74
%r76 = zext i192 %r75 to i224
%r77 = zext i32 %r31 to i224
%r78 = shl i224 %r77, 192
%r79 = or i224 %r76, %r78
%r80 = zext i224 %r55 to i256
%r81 = zext i224 %r79 to i256
%r82 = shl i256 %r81, 32
%r83 = add i256 %r80, %r82
ret i256 %r83
}
define void @mcl_fp_mont7L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r9 = getelementptr i32, i32* %r3, i32 0
%r10 = load i32, i32* %r9
%r11 = call i256 @mulPv224x32(i32* %r2, i32 %r10)
%r12 = zext i256 %r11 to i288
%r13 = trunc i256 %r11 to i32
%r14 = mul i32 %r13, %r7
%r15 = call i256 @mulPv224x32(i32* %r4, i32 %r14)
%r16 = zext i256 %r15 to i288
%r17 = add i288 %r12, %r16
%r18 = lshr i288 %r17, 32
%r20 = getelementptr i32, i32* %r3, i32 1
%r21 = load i32, i32* %r20
%r22 = call i256 @mulPv224x32(i32* %r2, i32 %r21)
%r23 = zext i256 %r22 to i288
%r24 = add i288 %r18, %r23
%r25 = trunc i288 %r24 to i32
%r26 = mul i32 %r25, %r7
%r27 = call i256 @mulPv224x32(i32* %r4, i32 %r26)
%r28 = zext i256 %r27 to i288
%r29 = add i288 %r24, %r28
%r30 = lshr i288 %r29, 32
%r32 = getelementptr i32, i32* %r3, i32 2
%r33 = load i32, i32* %r32
%r34 = call i256 @mulPv224x32(i32* %r2, i32 %r33)
%r35 = zext i256 %r34 to i288
%r36 = add i288 %r30, %r35
%r37 = trunc i288 %r36 to i32
%r38 = mul i32 %r37, %r7
%r39 = call i256 @mulPv224x32(i32* %r4, i32 %r38)
%r40 = zext i256 %r39 to i288
%r41 = add i288 %r36, %r40
%r42 = lshr i288 %r41, 32
%r44 = getelementptr i32, i32* %r3, i32 3
%r45 = load i32, i32* %r44
%r46 = call i256 @mulPv224x32(i32* %r2, i32 %r45)
%r47 = zext i256 %r46 to i288
%r48 = add i288 %r42, %r47
%r49 = trunc i288 %r48 to i32
%r50 = mul i32 %r49, %r7
%r51 = call i256 @mulPv224x32(i32* %r4, i32 %r50)
%r52 = zext i256 %r51 to i288
%r53 = add i288 %r48, %r52
%r54 = lshr i288 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 4
%r57 = load i32, i32* %r56
%r58 = call i256 @mulPv224x32(i32* %r2, i32 %r57)
%r59 = zext i256 %r58 to i288
%r60 = add i288 %r54, %r59
%r61 = trunc i288 %r60 to i32
%r62 = mul i32 %r61, %r7
%r63 = call i256 @mulPv224x32(i32* %r4, i32 %r62)
%r64 = zext i256 %r63 to i288
%r65 = add i288 %r60, %r64
%r66 = lshr i288 %r65, 32
%r68 = getelementptr i32, i32* %r3, i32 5
%r69 = load i32, i32* %r68
%r70 = call i256 @mulPv224x32(i32* %r2, i32 %r69)
%r71 = zext i256 %r70 to i288
%r72 = add i288 %r66, %r71
%r73 = trunc i288 %r72 to i32
%r74 = mul i32 %r73, %r7
%r75 = call i256 @mulPv224x32(i32* %r4, i32 %r74)
%r76 = zext i256 %r75 to i288
%r77 = add i288 %r72, %r76
%r78 = lshr i288 %r77, 32
%r80 = getelementptr i32, i32* %r3, i32 6
%r81 = load i32, i32* %r80
%r82 = call i256 @mulPv224x32(i32* %r2, i32 %r81)
%r83 = zext i256 %r82 to i288
%r84 = add i288 %r78, %r83
%r85 = trunc i288 %r84 to i32
%r86 = mul i32 %r85, %r7
%r87 = call i256 @mulPv224x32(i32* %r4, i32 %r86)
%r88 = zext i256 %r87 to i288
%r89 = add i288 %r84, %r88
%r90 = lshr i288 %r89, 32
%r91 = trunc i288 %r90 to i256
%r93 = bitcast i32* %r4 to i224*
%r94 = load i224, i224* %r93
%r95 = zext i224 %r94 to i256
%r96 = sub i256 %r91, %r95
%r97 = lshr i256 %r96, 224
%r98 = trunc i256 %r97 to i1
%r99 = select i1 %r98, i256 %r91, i256 %r96
%r100 = trunc i256 %r99 to i224
%r102 = bitcast i32* %r1 to i224*
store i224 %r100, i224* %r102
ret void
}
define void @mcl_fp_montNF7L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r8 = load i32, i32* %r3
%r9 = call i256 @mulPv224x32(i32* %r2, i32 %r8)
%r10 = trunc i256 %r9 to i32
%r11 = mul i32 %r10, %r7
%r12 = call i256 @mulPv224x32(i32* %r4, i32 %r11)
%r13 = add i256 %r9, %r12
%r14 = lshr i256 %r13, 32
%r16 = getelementptr i32, i32* %r3, i32 1
%r17 = load i32, i32* %r16
%r18 = call i256 @mulPv224x32(i32* %r2, i32 %r17)
%r19 = add i256 %r14, %r18
%r20 = trunc i256 %r19 to i32
%r21 = mul i32 %r20, %r7
%r22 = call i256 @mulPv224x32(i32* %r4, i32 %r21)
%r23 = add i256 %r19, %r22
%r24 = lshr i256 %r23, 32
%r26 = getelementptr i32, i32* %r3, i32 2
%r27 = load i32, i32* %r26
%r28 = call i256 @mulPv224x32(i32* %r2, i32 %r27)
%r29 = add i256 %r24, %r28
%r30 = trunc i256 %r29 to i32
%r31 = mul i32 %r30, %r7
%r32 = call i256 @mulPv224x32(i32* %r4, i32 %r31)
%r33 = add i256 %r29, %r32
%r34 = lshr i256 %r33, 32
%r36 = getelementptr i32, i32* %r3, i32 3
%r37 = load i32, i32* %r36
%r38 = call i256 @mulPv224x32(i32* %r2, i32 %r37)
%r39 = add i256 %r34, %r38
%r40 = trunc i256 %r39 to i32
%r41 = mul i32 %r40, %r7
%r42 = call i256 @mulPv224x32(i32* %r4, i32 %r41)
%r43 = add i256 %r39, %r42
%r44 = lshr i256 %r43, 32
%r46 = getelementptr i32, i32* %r3, i32 4
%r47 = load i32, i32* %r46
%r48 = call i256 @mulPv224x32(i32* %r2, i32 %r47)
%r49 = add i256 %r44, %r48
%r50 = trunc i256 %r49 to i32
%r51 = mul i32 %r50, %r7
%r52 = call i256 @mulPv224x32(i32* %r4, i32 %r51)
%r53 = add i256 %r49, %r52
%r54 = lshr i256 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 5
%r57 = load i32, i32* %r56
%r58 = call i256 @mulPv224x32(i32* %r2, i32 %r57)
%r59 = add i256 %r54, %r58
%r60 = trunc i256 %r59 to i32
%r61 = mul i32 %r60, %r7
%r62 = call i256 @mulPv224x32(i32* %r4, i32 %r61)
%r63 = add i256 %r59, %r62
%r64 = lshr i256 %r63, 32
%r66 = getelementptr i32, i32* %r3, i32 6
%r67 = load i32, i32* %r66
%r68 = call i256 @mulPv224x32(i32* %r2, i32 %r67)
%r69 = add i256 %r64, %r68
%r70 = trunc i256 %r69 to i32
%r71 = mul i32 %r70, %r7
%r72 = call i256 @mulPv224x32(i32* %r4, i32 %r71)
%r73 = add i256 %r69, %r72
%r74 = lshr i256 %r73, 32
%r75 = trunc i256 %r74 to i224
%r77 = bitcast i32* %r4 to i224*
%r78 = load i224, i224* %r77
%r79 = sub i224 %r75, %r78
%r80 = lshr i224 %r79, 223
%r81 = trunc i224 %r80 to i1
%r82 = select i1 %r81, i224 %r75, i224 %r79
%r84 = bitcast i32* %r1 to i224*
store i224 %r82, i224* %r84
ret void
}
define void @mcl_fp_montRed7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i224*
%r9 = load i224, i224* %r8
%r11 = bitcast i32* %r2 to i224*
%r12 = load i224, i224* %r11
%r13 = trunc i224 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i256 @mulPv224x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 7
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i256
%r20 = shl i256 %r19, 224
%r21 = zext i224 %r12 to i256
%r22 = or i256 %r20, %r21
%r23 = zext i256 %r22 to i288
%r24 = zext i256 %r15 to i288
%r25 = add i288 %r23, %r24
%r26 = lshr i288 %r25, 32
%r27 = trunc i288 %r26 to i256
%r28 = lshr i256 %r27, 224
%r29 = trunc i256 %r28 to i32
%r30 = trunc i256 %r27 to i224
%r31 = trunc i224 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i256 @mulPv224x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i256
%r35 = shl i256 %r34, 224
%r36 = add i256 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 8
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i256
%r41 = shl i256 %r40, 224
%r42 = zext i224 %r30 to i256
%r43 = or i256 %r41, %r42
%r44 = zext i256 %r43 to i288
%r45 = zext i256 %r36 to i288
%r46 = add i288 %r44, %r45
%r47 = lshr i288 %r46, 32
%r48 = trunc i288 %r47 to i256
%r49 = lshr i256 %r48, 224
%r50 = trunc i256 %r49 to i32
%r51 = trunc i256 %r48 to i224
%r52 = trunc i224 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i256 @mulPv224x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i256
%r56 = shl i256 %r55, 224
%r57 = add i256 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 9
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i256
%r62 = shl i256 %r61, 224
%r63 = zext i224 %r51 to i256
%r64 = or i256 %r62, %r63
%r65 = zext i256 %r64 to i288
%r66 = zext i256 %r57 to i288
%r67 = add i288 %r65, %r66
%r68 = lshr i288 %r67, 32
%r69 = trunc i288 %r68 to i256
%r70 = lshr i256 %r69, 224
%r71 = trunc i256 %r70 to i32
%r72 = trunc i256 %r69 to i224
%r73 = trunc i224 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i256 @mulPv224x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i256
%r77 = shl i256 %r76, 224
%r78 = add i256 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 10
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i256
%r83 = shl i256 %r82, 224
%r84 = zext i224 %r72 to i256
%r85 = or i256 %r83, %r84
%r86 = zext i256 %r85 to i288
%r87 = zext i256 %r78 to i288
%r88 = add i288 %r86, %r87
%r89 = lshr i288 %r88, 32
%r90 = trunc i288 %r89 to i256
%r91 = lshr i256 %r90, 224
%r92 = trunc i256 %r91 to i32
%r93 = trunc i256 %r90 to i224
%r94 = trunc i224 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i256 @mulPv224x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i256
%r98 = shl i256 %r97, 224
%r99 = add i256 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 11
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i256
%r104 = shl i256 %r103, 224
%r105 = zext i224 %r93 to i256
%r106 = or i256 %r104, %r105
%r107 = zext i256 %r106 to i288
%r108 = zext i256 %r99 to i288
%r109 = add i288 %r107, %r108
%r110 = lshr i288 %r109, 32
%r111 = trunc i288 %r110 to i256
%r112 = lshr i256 %r111, 224
%r113 = trunc i256 %r112 to i32
%r114 = trunc i256 %r111 to i224
%r115 = trunc i224 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i256 @mulPv224x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i256
%r119 = shl i256 %r118, 224
%r120 = add i256 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 12
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i256
%r125 = shl i256 %r124, 224
%r126 = zext i224 %r114 to i256
%r127 = or i256 %r125, %r126
%r128 = zext i256 %r127 to i288
%r129 = zext i256 %r120 to i288
%r130 = add i288 %r128, %r129
%r131 = lshr i288 %r130, 32
%r132 = trunc i288 %r131 to i256
%r133 = lshr i256 %r132, 224
%r134 = trunc i256 %r133 to i32
%r135 = trunc i256 %r132 to i224
%r136 = trunc i224 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i256 @mulPv224x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i256
%r140 = shl i256 %r139, 224
%r141 = add i256 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 13
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i256
%r146 = shl i256 %r145, 224
%r147 = zext i224 %r135 to i256
%r148 = or i256 %r146, %r147
%r149 = zext i256 %r148 to i288
%r150 = zext i256 %r141 to i288
%r151 = add i288 %r149, %r150
%r152 = lshr i288 %r151, 32
%r153 = trunc i288 %r152 to i256
%r154 = lshr i256 %r153, 224
%r155 = trunc i256 %r154 to i32
%r156 = trunc i256 %r153 to i224
%r157 = zext i224 %r9 to i256
%r158 = zext i32 %r155 to i256
%r159 = shl i256 %r158, 224
%r160 = zext i224 %r156 to i256
%r161 = or i256 %r159, %r160
%r162 = sub i256 %r161, %r157
%r163 = lshr i256 %r162, 224
%r164 = trunc i256 %r163 to i1
%r165 = select i1 %r164, i256 %r161, i256 %r162
%r166 = trunc i256 %r165 to i224
%r168 = bitcast i32* %r1 to i224*
store i224 %r166, i224* %r168
ret void
}
define void @mcl_fp_montRedNF7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i224*
%r9 = load i224, i224* %r8
%r11 = bitcast i32* %r2 to i224*
%r12 = load i224, i224* %r11
%r13 = trunc i224 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i256 @mulPv224x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 7
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i256
%r20 = shl i256 %r19, 224
%r21 = zext i224 %r12 to i256
%r22 = or i256 %r20, %r21
%r23 = zext i256 %r22 to i288
%r24 = zext i256 %r15 to i288
%r25 = add i288 %r23, %r24
%r26 = lshr i288 %r25, 32
%r27 = trunc i288 %r26 to i256
%r28 = lshr i256 %r27, 224
%r29 = trunc i256 %r28 to i32
%r30 = trunc i256 %r27 to i224
%r31 = trunc i224 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i256 @mulPv224x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i256
%r35 = shl i256 %r34, 224
%r36 = add i256 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 8
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i256
%r41 = shl i256 %r40, 224
%r42 = zext i224 %r30 to i256
%r43 = or i256 %r41, %r42
%r44 = zext i256 %r43 to i288
%r45 = zext i256 %r36 to i288
%r46 = add i288 %r44, %r45
%r47 = lshr i288 %r46, 32
%r48 = trunc i288 %r47 to i256
%r49 = lshr i256 %r48, 224
%r50 = trunc i256 %r49 to i32
%r51 = trunc i256 %r48 to i224
%r52 = trunc i224 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i256 @mulPv224x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i256
%r56 = shl i256 %r55, 224
%r57 = add i256 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 9
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i256
%r62 = shl i256 %r61, 224
%r63 = zext i224 %r51 to i256
%r64 = or i256 %r62, %r63
%r65 = zext i256 %r64 to i288
%r66 = zext i256 %r57 to i288
%r67 = add i288 %r65, %r66
%r68 = lshr i288 %r67, 32
%r69 = trunc i288 %r68 to i256
%r70 = lshr i256 %r69, 224
%r71 = trunc i256 %r70 to i32
%r72 = trunc i256 %r69 to i224
%r73 = trunc i224 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i256 @mulPv224x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i256
%r77 = shl i256 %r76, 224
%r78 = add i256 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 10
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i256
%r83 = shl i256 %r82, 224
%r84 = zext i224 %r72 to i256
%r85 = or i256 %r83, %r84
%r86 = zext i256 %r85 to i288
%r87 = zext i256 %r78 to i288
%r88 = add i288 %r86, %r87
%r89 = lshr i288 %r88, 32
%r90 = trunc i288 %r89 to i256
%r91 = lshr i256 %r90, 224
%r92 = trunc i256 %r91 to i32
%r93 = trunc i256 %r90 to i224
%r94 = trunc i224 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i256 @mulPv224x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i256
%r98 = shl i256 %r97, 224
%r99 = add i256 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 11
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i256
%r104 = shl i256 %r103, 224
%r105 = zext i224 %r93 to i256
%r106 = or i256 %r104, %r105
%r107 = zext i256 %r106 to i288
%r108 = zext i256 %r99 to i288
%r109 = add i288 %r107, %r108
%r110 = lshr i288 %r109, 32
%r111 = trunc i288 %r110 to i256
%r112 = lshr i256 %r111, 224
%r113 = trunc i256 %r112 to i32
%r114 = trunc i256 %r111 to i224
%r115 = trunc i224 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i256 @mulPv224x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i256
%r119 = shl i256 %r118, 224
%r120 = add i256 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 12
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i256
%r125 = shl i256 %r124, 224
%r126 = zext i224 %r114 to i256
%r127 = or i256 %r125, %r126
%r128 = zext i256 %r127 to i288
%r129 = zext i256 %r120 to i288
%r130 = add i288 %r128, %r129
%r131 = lshr i288 %r130, 32
%r132 = trunc i288 %r131 to i256
%r133 = lshr i256 %r132, 224
%r134 = trunc i256 %r133 to i32
%r135 = trunc i256 %r132 to i224
%r136 = trunc i224 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i256 @mulPv224x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i256
%r140 = shl i256 %r139, 224
%r141 = add i256 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 13
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i256
%r146 = shl i256 %r145, 224
%r147 = zext i224 %r135 to i256
%r148 = or i256 %r146, %r147
%r149 = zext i256 %r148 to i288
%r150 = zext i256 %r141 to i288
%r151 = add i288 %r149, %r150
%r152 = lshr i288 %r151, 32
%r153 = trunc i288 %r152 to i256
%r154 = lshr i256 %r153, 224
%r155 = trunc i256 %r154 to i32
%r156 = trunc i256 %r153 to i224
%r157 = sub i224 %r156, %r9
%r158 = lshr i224 %r157, 223
%r159 = trunc i224 %r158 to i1
%r160 = select i1 %r159, i224 %r156, i224 %r157
%r162 = bitcast i32* %r1 to i224*
store i224 %r160, i224* %r162
ret void
}
define i32 @mcl_fp_addPre7L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i224*
%r7 = load i224, i224* %r6
%r8 = zext i224 %r7 to i256
%r10 = bitcast i32* %r4 to i224*
%r11 = load i224, i224* %r10
%r12 = zext i224 %r11 to i256
%r13 = add i256 %r8, %r12
%r14 = trunc i256 %r13 to i224
%r16 = bitcast i32* %r2 to i224*
store i224 %r14, i224* %r16
%r17 = lshr i256 %r13, 224
%r18 = trunc i256 %r17 to i32
ret i32 %r18
}
define i32 @mcl_fp_subPre7L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i224*
%r7 = load i224, i224* %r6
%r8 = zext i224 %r7 to i256
%r10 = bitcast i32* %r4 to i224*
%r11 = load i224, i224* %r10
%r12 = zext i224 %r11 to i256
%r13 = sub i256 %r8, %r12
%r14 = trunc i256 %r13 to i224
%r16 = bitcast i32* %r2 to i224*
store i224 %r14, i224* %r16
%r18 = lshr i256 %r13, 224
%r19 = trunc i256 %r18 to i32
%r20 = and i32 %r19, 1
ret i32 %r20
}
define void @mcl_fp_shr1_7L(i32* noalias  %r1, i32* noalias  %r2)
{
%r4 = bitcast i32* %r2 to i224*
%r5 = load i224, i224* %r4
%r6 = lshr i224 %r5, 1
%r8 = bitcast i32* %r1 to i224*
store i224 %r6, i224* %r8
ret void
}
define void @mcl_fp_add7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i224*
%r7 = load i224, i224* %r6
%r9 = bitcast i32* %r3 to i224*
%r10 = load i224, i224* %r9
%r11 = zext i224 %r7 to i256
%r12 = zext i224 %r10 to i256
%r13 = add i256 %r11, %r12
%r15 = bitcast i32* %r4 to i224*
%r16 = load i224, i224* %r15
%r17 = zext i224 %r16 to i256
%r18 = sub i256 %r13, %r17
%r19 = lshr i256 %r18, 224
%r20 = trunc i256 %r19 to i1
%r21 = select i1 %r20, i256 %r13, i256 %r18
%r22 = trunc i256 %r21 to i224
%r24 = bitcast i32* %r1 to i224*
store i224 %r22, i224* %r24
ret void
}
define void @mcl_fp_addNF7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i224*
%r7 = load i224, i224* %r6
%r9 = bitcast i32* %r3 to i224*
%r10 = load i224, i224* %r9
%r11 = add i224 %r7, %r10
%r13 = bitcast i32* %r4 to i224*
%r14 = load i224, i224* %r13
%r15 = sub i224 %r11, %r14
%r16 = lshr i224 %r15, 223
%r17 = trunc i224 %r16 to i1
%r18 = select i1 %r17, i224 %r11, i224 %r15
%r20 = bitcast i32* %r1 to i224*
store i224 %r18, i224* %r20
ret void
}
define void @mcl_fp_sub7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i224*
%r7 = load i224, i224* %r6
%r9 = bitcast i32* %r3 to i224*
%r10 = load i224, i224* %r9
%r11 = zext i224 %r7 to i225
%r12 = zext i224 %r10 to i225
%r13 = sub i225 %r11, %r12
%r14 = lshr i225 %r13, 224
%r15 = trunc i225 %r14 to i1
%r16 = trunc i225 %r13 to i224
%r18 = bitcast i32* %r4 to i224*
%r19 = load i224, i224* %r18
%r21 = select i1 %r15, i224 %r19, i224 0
%r22 = add i224 %r16, %r21
%r24 = bitcast i32* %r1 to i224*
store i224 %r22, i224* %r24
ret void
}
define void @mcl_fp_subNF7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i224*
%r7 = load i224, i224* %r6
%r9 = bitcast i32* %r3 to i224*
%r10 = load i224, i224* %r9
%r11 = sub i224 %r7, %r10
%r12 = lshr i224 %r11, 223
%r13 = trunc i224 %r12 to i1
%r15 = bitcast i32* %r4 to i224*
%r16 = load i224, i224* %r15
%r18 = select i1 %r13, i224 %r16, i224 0
%r19 = add i224 %r11, %r18
%r21 = bitcast i32* %r1 to i224*
store i224 %r19, i224* %r21
ret void
}
define void @mcl_fpDbl_add7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i448*
%r7 = load i448, i448* %r6
%r9 = bitcast i32* %r3 to i448*
%r10 = load i448, i448* %r9
%r11 = zext i448 %r7 to i480
%r12 = zext i448 %r10 to i480
%r13 = add i480 %r11, %r12
%r14 = trunc i480 %r13 to i224
%r16 = bitcast i32* %r1 to i224*
store i224 %r14, i224* %r16
%r17 = lshr i480 %r13, 224
%r18 = trunc i480 %r17 to i256
%r20 = bitcast i32* %r4 to i224*
%r21 = load i224, i224* %r20
%r22 = zext i224 %r21 to i256
%r23 = sub i256 %r18, %r22
%r24 = lshr i256 %r23, 224
%r25 = trunc i256 %r24 to i1
%r26 = select i1 %r25, i256 %r18, i256 %r23
%r27 = trunc i256 %r26 to i224
%r29 = getelementptr i32, i32* %r1, i32 7
%r31 = bitcast i32* %r29 to i224*
store i224 %r27, i224* %r31
ret void
}
define void @mcl_fpDbl_sub7L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i448*
%r7 = load i448, i448* %r6
%r9 = bitcast i32* %r3 to i448*
%r10 = load i448, i448* %r9
%r11 = zext i448 %r7 to i480
%r12 = zext i448 %r10 to i480
%r13 = sub i480 %r11, %r12
%r14 = trunc i480 %r13 to i224
%r16 = bitcast i32* %r1 to i224*
store i224 %r14, i224* %r16
%r17 = lshr i480 %r13, 224
%r18 = trunc i480 %r17 to i224
%r19 = lshr i480 %r13, 448
%r20 = trunc i480 %r19 to i1
%r22 = bitcast i32* %r4 to i224*
%r23 = load i224, i224* %r22
%r25 = select i1 %r20, i224 %r23, i224 0
%r26 = add i224 %r18, %r25
%r28 = getelementptr i32, i32* %r1, i32 7
%r30 = bitcast i32* %r28 to i224*
store i224 %r26, i224* %r30
ret void
}
define i288 @mulPv256x32(i32* noalias  %r2, i32 %r3)
{
%r5 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 0)
%r6 = trunc i64 %r5 to i32
%r7 = call i32 @extractHigh32(i64 %r5)
%r9 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 1)
%r10 = trunc i64 %r9 to i32
%r11 = call i32 @extractHigh32(i64 %r9)
%r13 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 2)
%r14 = trunc i64 %r13 to i32
%r15 = call i32 @extractHigh32(i64 %r13)
%r17 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 3)
%r18 = trunc i64 %r17 to i32
%r19 = call i32 @extractHigh32(i64 %r17)
%r21 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 4)
%r22 = trunc i64 %r21 to i32
%r23 = call i32 @extractHigh32(i64 %r21)
%r25 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 5)
%r26 = trunc i64 %r25 to i32
%r27 = call i32 @extractHigh32(i64 %r25)
%r29 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 6)
%r30 = trunc i64 %r29 to i32
%r31 = call i32 @extractHigh32(i64 %r29)
%r33 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 7)
%r34 = trunc i64 %r33 to i32
%r35 = call i32 @extractHigh32(i64 %r33)
%r36 = zext i32 %r6 to i64
%r37 = zext i32 %r10 to i64
%r38 = shl i64 %r37, 32
%r39 = or i64 %r36, %r38
%r40 = zext i64 %r39 to i96
%r41 = zext i32 %r14 to i96
%r42 = shl i96 %r41, 64
%r43 = or i96 %r40, %r42
%r44 = zext i96 %r43 to i128
%r45 = zext i32 %r18 to i128
%r46 = shl i128 %r45, 96
%r47 = or i128 %r44, %r46
%r48 = zext i128 %r47 to i160
%r49 = zext i32 %r22 to i160
%r50 = shl i160 %r49, 128
%r51 = or i160 %r48, %r50
%r52 = zext i160 %r51 to i192
%r53 = zext i32 %r26 to i192
%r54 = shl i192 %r53, 160
%r55 = or i192 %r52, %r54
%r56 = zext i192 %r55 to i224
%r57 = zext i32 %r30 to i224
%r58 = shl i224 %r57, 192
%r59 = or i224 %r56, %r58
%r60 = zext i224 %r59 to i256
%r61 = zext i32 %r34 to i256
%r62 = shl i256 %r61, 224
%r63 = or i256 %r60, %r62
%r64 = zext i32 %r7 to i64
%r65 = zext i32 %r11 to i64
%r66 = shl i64 %r65, 32
%r67 = or i64 %r64, %r66
%r68 = zext i64 %r67 to i96
%r69 = zext i32 %r15 to i96
%r70 = shl i96 %r69, 64
%r71 = or i96 %r68, %r70
%r72 = zext i96 %r71 to i128
%r73 = zext i32 %r19 to i128
%r74 = shl i128 %r73, 96
%r75 = or i128 %r72, %r74
%r76 = zext i128 %r75 to i160
%r77 = zext i32 %r23 to i160
%r78 = shl i160 %r77, 128
%r79 = or i160 %r76, %r78
%r80 = zext i160 %r79 to i192
%r81 = zext i32 %r27 to i192
%r82 = shl i192 %r81, 160
%r83 = or i192 %r80, %r82
%r84 = zext i192 %r83 to i224
%r85 = zext i32 %r31 to i224
%r86 = shl i224 %r85, 192
%r87 = or i224 %r84, %r86
%r88 = zext i224 %r87 to i256
%r89 = zext i32 %r35 to i256
%r90 = shl i256 %r89, 224
%r91 = or i256 %r88, %r90
%r92 = zext i256 %r63 to i288
%r93 = zext i256 %r91 to i288
%r94 = shl i288 %r93, 32
%r95 = add i288 %r92, %r94
ret i288 %r95
}
define void @mcl_fp_mont8L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r9 = getelementptr i32, i32* %r3, i32 0
%r10 = load i32, i32* %r9
%r11 = call i288 @mulPv256x32(i32* %r2, i32 %r10)
%r12 = zext i288 %r11 to i320
%r13 = trunc i288 %r11 to i32
%r14 = mul i32 %r13, %r7
%r15 = call i288 @mulPv256x32(i32* %r4, i32 %r14)
%r16 = zext i288 %r15 to i320
%r17 = add i320 %r12, %r16
%r18 = lshr i320 %r17, 32
%r20 = getelementptr i32, i32* %r3, i32 1
%r21 = load i32, i32* %r20
%r22 = call i288 @mulPv256x32(i32* %r2, i32 %r21)
%r23 = zext i288 %r22 to i320
%r24 = add i320 %r18, %r23
%r25 = trunc i320 %r24 to i32
%r26 = mul i32 %r25, %r7
%r27 = call i288 @mulPv256x32(i32* %r4, i32 %r26)
%r28 = zext i288 %r27 to i320
%r29 = add i320 %r24, %r28
%r30 = lshr i320 %r29, 32
%r32 = getelementptr i32, i32* %r3, i32 2
%r33 = load i32, i32* %r32
%r34 = call i288 @mulPv256x32(i32* %r2, i32 %r33)
%r35 = zext i288 %r34 to i320
%r36 = add i320 %r30, %r35
%r37 = trunc i320 %r36 to i32
%r38 = mul i32 %r37, %r7
%r39 = call i288 @mulPv256x32(i32* %r4, i32 %r38)
%r40 = zext i288 %r39 to i320
%r41 = add i320 %r36, %r40
%r42 = lshr i320 %r41, 32
%r44 = getelementptr i32, i32* %r3, i32 3
%r45 = load i32, i32* %r44
%r46 = call i288 @mulPv256x32(i32* %r2, i32 %r45)
%r47 = zext i288 %r46 to i320
%r48 = add i320 %r42, %r47
%r49 = trunc i320 %r48 to i32
%r50 = mul i32 %r49, %r7
%r51 = call i288 @mulPv256x32(i32* %r4, i32 %r50)
%r52 = zext i288 %r51 to i320
%r53 = add i320 %r48, %r52
%r54 = lshr i320 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 4
%r57 = load i32, i32* %r56
%r58 = call i288 @mulPv256x32(i32* %r2, i32 %r57)
%r59 = zext i288 %r58 to i320
%r60 = add i320 %r54, %r59
%r61 = trunc i320 %r60 to i32
%r62 = mul i32 %r61, %r7
%r63 = call i288 @mulPv256x32(i32* %r4, i32 %r62)
%r64 = zext i288 %r63 to i320
%r65 = add i320 %r60, %r64
%r66 = lshr i320 %r65, 32
%r68 = getelementptr i32, i32* %r3, i32 5
%r69 = load i32, i32* %r68
%r70 = call i288 @mulPv256x32(i32* %r2, i32 %r69)
%r71 = zext i288 %r70 to i320
%r72 = add i320 %r66, %r71
%r73 = trunc i320 %r72 to i32
%r74 = mul i32 %r73, %r7
%r75 = call i288 @mulPv256x32(i32* %r4, i32 %r74)
%r76 = zext i288 %r75 to i320
%r77 = add i320 %r72, %r76
%r78 = lshr i320 %r77, 32
%r80 = getelementptr i32, i32* %r3, i32 6
%r81 = load i32, i32* %r80
%r82 = call i288 @mulPv256x32(i32* %r2, i32 %r81)
%r83 = zext i288 %r82 to i320
%r84 = add i320 %r78, %r83
%r85 = trunc i320 %r84 to i32
%r86 = mul i32 %r85, %r7
%r87 = call i288 @mulPv256x32(i32* %r4, i32 %r86)
%r88 = zext i288 %r87 to i320
%r89 = add i320 %r84, %r88
%r90 = lshr i320 %r89, 32
%r92 = getelementptr i32, i32* %r3, i32 7
%r93 = load i32, i32* %r92
%r94 = call i288 @mulPv256x32(i32* %r2, i32 %r93)
%r95 = zext i288 %r94 to i320
%r96 = add i320 %r90, %r95
%r97 = trunc i320 %r96 to i32
%r98 = mul i32 %r97, %r7
%r99 = call i288 @mulPv256x32(i32* %r4, i32 %r98)
%r100 = zext i288 %r99 to i320
%r101 = add i320 %r96, %r100
%r102 = lshr i320 %r101, 32
%r103 = trunc i320 %r102 to i288
%r105 = bitcast i32* %r4 to i256*
%r106 = load i256, i256* %r105
%r107 = zext i256 %r106 to i288
%r108 = sub i288 %r103, %r107
%r109 = lshr i288 %r108, 256
%r110 = trunc i288 %r109 to i1
%r111 = select i1 %r110, i288 %r103, i288 %r108
%r112 = trunc i288 %r111 to i256
%r114 = bitcast i32* %r1 to i256*
store i256 %r112, i256* %r114
ret void
}
define void @mcl_fp_montNF8L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r8 = load i32, i32* %r3
%r9 = call i288 @mulPv256x32(i32* %r2, i32 %r8)
%r10 = trunc i288 %r9 to i32
%r11 = mul i32 %r10, %r7
%r12 = call i288 @mulPv256x32(i32* %r4, i32 %r11)
%r13 = add i288 %r9, %r12
%r14 = lshr i288 %r13, 32
%r16 = getelementptr i32, i32* %r3, i32 1
%r17 = load i32, i32* %r16
%r18 = call i288 @mulPv256x32(i32* %r2, i32 %r17)
%r19 = add i288 %r14, %r18
%r20 = trunc i288 %r19 to i32
%r21 = mul i32 %r20, %r7
%r22 = call i288 @mulPv256x32(i32* %r4, i32 %r21)
%r23 = add i288 %r19, %r22
%r24 = lshr i288 %r23, 32
%r26 = getelementptr i32, i32* %r3, i32 2
%r27 = load i32, i32* %r26
%r28 = call i288 @mulPv256x32(i32* %r2, i32 %r27)
%r29 = add i288 %r24, %r28
%r30 = trunc i288 %r29 to i32
%r31 = mul i32 %r30, %r7
%r32 = call i288 @mulPv256x32(i32* %r4, i32 %r31)
%r33 = add i288 %r29, %r32
%r34 = lshr i288 %r33, 32
%r36 = getelementptr i32, i32* %r3, i32 3
%r37 = load i32, i32* %r36
%r38 = call i288 @mulPv256x32(i32* %r2, i32 %r37)
%r39 = add i288 %r34, %r38
%r40 = trunc i288 %r39 to i32
%r41 = mul i32 %r40, %r7
%r42 = call i288 @mulPv256x32(i32* %r4, i32 %r41)
%r43 = add i288 %r39, %r42
%r44 = lshr i288 %r43, 32
%r46 = getelementptr i32, i32* %r3, i32 4
%r47 = load i32, i32* %r46
%r48 = call i288 @mulPv256x32(i32* %r2, i32 %r47)
%r49 = add i288 %r44, %r48
%r50 = trunc i288 %r49 to i32
%r51 = mul i32 %r50, %r7
%r52 = call i288 @mulPv256x32(i32* %r4, i32 %r51)
%r53 = add i288 %r49, %r52
%r54 = lshr i288 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 5
%r57 = load i32, i32* %r56
%r58 = call i288 @mulPv256x32(i32* %r2, i32 %r57)
%r59 = add i288 %r54, %r58
%r60 = trunc i288 %r59 to i32
%r61 = mul i32 %r60, %r7
%r62 = call i288 @mulPv256x32(i32* %r4, i32 %r61)
%r63 = add i288 %r59, %r62
%r64 = lshr i288 %r63, 32
%r66 = getelementptr i32, i32* %r3, i32 6
%r67 = load i32, i32* %r66
%r68 = call i288 @mulPv256x32(i32* %r2, i32 %r67)
%r69 = add i288 %r64, %r68
%r70 = trunc i288 %r69 to i32
%r71 = mul i32 %r70, %r7
%r72 = call i288 @mulPv256x32(i32* %r4, i32 %r71)
%r73 = add i288 %r69, %r72
%r74 = lshr i288 %r73, 32
%r76 = getelementptr i32, i32* %r3, i32 7
%r77 = load i32, i32* %r76
%r78 = call i288 @mulPv256x32(i32* %r2, i32 %r77)
%r79 = add i288 %r74, %r78
%r80 = trunc i288 %r79 to i32
%r81 = mul i32 %r80, %r7
%r82 = call i288 @mulPv256x32(i32* %r4, i32 %r81)
%r83 = add i288 %r79, %r82
%r84 = lshr i288 %r83, 32
%r85 = trunc i288 %r84 to i256
%r87 = bitcast i32* %r4 to i256*
%r88 = load i256, i256* %r87
%r89 = sub i256 %r85, %r88
%r90 = lshr i256 %r89, 255
%r91 = trunc i256 %r90 to i1
%r92 = select i1 %r91, i256 %r85, i256 %r89
%r94 = bitcast i32* %r1 to i256*
store i256 %r92, i256* %r94
ret void
}
define void @mcl_fp_montRed8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i256*
%r9 = load i256, i256* %r8
%r11 = bitcast i32* %r2 to i256*
%r12 = load i256, i256* %r11
%r13 = trunc i256 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i288 @mulPv256x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 8
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i288
%r20 = shl i288 %r19, 256
%r21 = zext i256 %r12 to i288
%r22 = or i288 %r20, %r21
%r23 = zext i288 %r22 to i320
%r24 = zext i288 %r15 to i320
%r25 = add i320 %r23, %r24
%r26 = lshr i320 %r25, 32
%r27 = trunc i320 %r26 to i288
%r28 = lshr i288 %r27, 256
%r29 = trunc i288 %r28 to i32
%r30 = trunc i288 %r27 to i256
%r31 = trunc i256 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i288 @mulPv256x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i288
%r35 = shl i288 %r34, 256
%r36 = add i288 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 9
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i288
%r41 = shl i288 %r40, 256
%r42 = zext i256 %r30 to i288
%r43 = or i288 %r41, %r42
%r44 = zext i288 %r43 to i320
%r45 = zext i288 %r36 to i320
%r46 = add i320 %r44, %r45
%r47 = lshr i320 %r46, 32
%r48 = trunc i320 %r47 to i288
%r49 = lshr i288 %r48, 256
%r50 = trunc i288 %r49 to i32
%r51 = trunc i288 %r48 to i256
%r52 = trunc i256 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i288 @mulPv256x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i288
%r56 = shl i288 %r55, 256
%r57 = add i288 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 10
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i288
%r62 = shl i288 %r61, 256
%r63 = zext i256 %r51 to i288
%r64 = or i288 %r62, %r63
%r65 = zext i288 %r64 to i320
%r66 = zext i288 %r57 to i320
%r67 = add i320 %r65, %r66
%r68 = lshr i320 %r67, 32
%r69 = trunc i320 %r68 to i288
%r70 = lshr i288 %r69, 256
%r71 = trunc i288 %r70 to i32
%r72 = trunc i288 %r69 to i256
%r73 = trunc i256 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i288 @mulPv256x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i288
%r77 = shl i288 %r76, 256
%r78 = add i288 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 11
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i288
%r83 = shl i288 %r82, 256
%r84 = zext i256 %r72 to i288
%r85 = or i288 %r83, %r84
%r86 = zext i288 %r85 to i320
%r87 = zext i288 %r78 to i320
%r88 = add i320 %r86, %r87
%r89 = lshr i320 %r88, 32
%r90 = trunc i320 %r89 to i288
%r91 = lshr i288 %r90, 256
%r92 = trunc i288 %r91 to i32
%r93 = trunc i288 %r90 to i256
%r94 = trunc i256 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i288 @mulPv256x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i288
%r98 = shl i288 %r97, 256
%r99 = add i288 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 12
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i288
%r104 = shl i288 %r103, 256
%r105 = zext i256 %r93 to i288
%r106 = or i288 %r104, %r105
%r107 = zext i288 %r106 to i320
%r108 = zext i288 %r99 to i320
%r109 = add i320 %r107, %r108
%r110 = lshr i320 %r109, 32
%r111 = trunc i320 %r110 to i288
%r112 = lshr i288 %r111, 256
%r113 = trunc i288 %r112 to i32
%r114 = trunc i288 %r111 to i256
%r115 = trunc i256 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i288 @mulPv256x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i288
%r119 = shl i288 %r118, 256
%r120 = add i288 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 13
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i288
%r125 = shl i288 %r124, 256
%r126 = zext i256 %r114 to i288
%r127 = or i288 %r125, %r126
%r128 = zext i288 %r127 to i320
%r129 = zext i288 %r120 to i320
%r130 = add i320 %r128, %r129
%r131 = lshr i320 %r130, 32
%r132 = trunc i320 %r131 to i288
%r133 = lshr i288 %r132, 256
%r134 = trunc i288 %r133 to i32
%r135 = trunc i288 %r132 to i256
%r136 = trunc i256 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i288 @mulPv256x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i288
%r140 = shl i288 %r139, 256
%r141 = add i288 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 14
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i288
%r146 = shl i288 %r145, 256
%r147 = zext i256 %r135 to i288
%r148 = or i288 %r146, %r147
%r149 = zext i288 %r148 to i320
%r150 = zext i288 %r141 to i320
%r151 = add i320 %r149, %r150
%r152 = lshr i320 %r151, 32
%r153 = trunc i320 %r152 to i288
%r154 = lshr i288 %r153, 256
%r155 = trunc i288 %r154 to i32
%r156 = trunc i288 %r153 to i256
%r157 = trunc i256 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i288 @mulPv256x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i288
%r161 = shl i288 %r160, 256
%r162 = add i288 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 15
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i288
%r167 = shl i288 %r166, 256
%r168 = zext i256 %r156 to i288
%r169 = or i288 %r167, %r168
%r170 = zext i288 %r169 to i320
%r171 = zext i288 %r162 to i320
%r172 = add i320 %r170, %r171
%r173 = lshr i320 %r172, 32
%r174 = trunc i320 %r173 to i288
%r175 = lshr i288 %r174, 256
%r176 = trunc i288 %r175 to i32
%r177 = trunc i288 %r174 to i256
%r178 = zext i256 %r9 to i288
%r179 = zext i32 %r176 to i288
%r180 = shl i288 %r179, 256
%r181 = zext i256 %r177 to i288
%r182 = or i288 %r180, %r181
%r183 = sub i288 %r182, %r178
%r184 = lshr i288 %r183, 256
%r185 = trunc i288 %r184 to i1
%r186 = select i1 %r185, i288 %r182, i288 %r183
%r187 = trunc i288 %r186 to i256
%r189 = bitcast i32* %r1 to i256*
store i256 %r187, i256* %r189
ret void
}
define void @mcl_fp_montRedNF8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i256*
%r9 = load i256, i256* %r8
%r11 = bitcast i32* %r2 to i256*
%r12 = load i256, i256* %r11
%r13 = trunc i256 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i288 @mulPv256x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 8
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i288
%r20 = shl i288 %r19, 256
%r21 = zext i256 %r12 to i288
%r22 = or i288 %r20, %r21
%r23 = zext i288 %r22 to i320
%r24 = zext i288 %r15 to i320
%r25 = add i320 %r23, %r24
%r26 = lshr i320 %r25, 32
%r27 = trunc i320 %r26 to i288
%r28 = lshr i288 %r27, 256
%r29 = trunc i288 %r28 to i32
%r30 = trunc i288 %r27 to i256
%r31 = trunc i256 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i288 @mulPv256x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i288
%r35 = shl i288 %r34, 256
%r36 = add i288 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 9
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i288
%r41 = shl i288 %r40, 256
%r42 = zext i256 %r30 to i288
%r43 = or i288 %r41, %r42
%r44 = zext i288 %r43 to i320
%r45 = zext i288 %r36 to i320
%r46 = add i320 %r44, %r45
%r47 = lshr i320 %r46, 32
%r48 = trunc i320 %r47 to i288
%r49 = lshr i288 %r48, 256
%r50 = trunc i288 %r49 to i32
%r51 = trunc i288 %r48 to i256
%r52 = trunc i256 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i288 @mulPv256x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i288
%r56 = shl i288 %r55, 256
%r57 = add i288 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 10
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i288
%r62 = shl i288 %r61, 256
%r63 = zext i256 %r51 to i288
%r64 = or i288 %r62, %r63
%r65 = zext i288 %r64 to i320
%r66 = zext i288 %r57 to i320
%r67 = add i320 %r65, %r66
%r68 = lshr i320 %r67, 32
%r69 = trunc i320 %r68 to i288
%r70 = lshr i288 %r69, 256
%r71 = trunc i288 %r70 to i32
%r72 = trunc i288 %r69 to i256
%r73 = trunc i256 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i288 @mulPv256x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i288
%r77 = shl i288 %r76, 256
%r78 = add i288 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 11
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i288
%r83 = shl i288 %r82, 256
%r84 = zext i256 %r72 to i288
%r85 = or i288 %r83, %r84
%r86 = zext i288 %r85 to i320
%r87 = zext i288 %r78 to i320
%r88 = add i320 %r86, %r87
%r89 = lshr i320 %r88, 32
%r90 = trunc i320 %r89 to i288
%r91 = lshr i288 %r90, 256
%r92 = trunc i288 %r91 to i32
%r93 = trunc i288 %r90 to i256
%r94 = trunc i256 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i288 @mulPv256x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i288
%r98 = shl i288 %r97, 256
%r99 = add i288 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 12
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i288
%r104 = shl i288 %r103, 256
%r105 = zext i256 %r93 to i288
%r106 = or i288 %r104, %r105
%r107 = zext i288 %r106 to i320
%r108 = zext i288 %r99 to i320
%r109 = add i320 %r107, %r108
%r110 = lshr i320 %r109, 32
%r111 = trunc i320 %r110 to i288
%r112 = lshr i288 %r111, 256
%r113 = trunc i288 %r112 to i32
%r114 = trunc i288 %r111 to i256
%r115 = trunc i256 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i288 @mulPv256x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i288
%r119 = shl i288 %r118, 256
%r120 = add i288 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 13
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i288
%r125 = shl i288 %r124, 256
%r126 = zext i256 %r114 to i288
%r127 = or i288 %r125, %r126
%r128 = zext i288 %r127 to i320
%r129 = zext i288 %r120 to i320
%r130 = add i320 %r128, %r129
%r131 = lshr i320 %r130, 32
%r132 = trunc i320 %r131 to i288
%r133 = lshr i288 %r132, 256
%r134 = trunc i288 %r133 to i32
%r135 = trunc i288 %r132 to i256
%r136 = trunc i256 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i288 @mulPv256x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i288
%r140 = shl i288 %r139, 256
%r141 = add i288 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 14
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i288
%r146 = shl i288 %r145, 256
%r147 = zext i256 %r135 to i288
%r148 = or i288 %r146, %r147
%r149 = zext i288 %r148 to i320
%r150 = zext i288 %r141 to i320
%r151 = add i320 %r149, %r150
%r152 = lshr i320 %r151, 32
%r153 = trunc i320 %r152 to i288
%r154 = lshr i288 %r153, 256
%r155 = trunc i288 %r154 to i32
%r156 = trunc i288 %r153 to i256
%r157 = trunc i256 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i288 @mulPv256x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i288
%r161 = shl i288 %r160, 256
%r162 = add i288 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 15
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i288
%r167 = shl i288 %r166, 256
%r168 = zext i256 %r156 to i288
%r169 = or i288 %r167, %r168
%r170 = zext i288 %r169 to i320
%r171 = zext i288 %r162 to i320
%r172 = add i320 %r170, %r171
%r173 = lshr i320 %r172, 32
%r174 = trunc i320 %r173 to i288
%r175 = lshr i288 %r174, 256
%r176 = trunc i288 %r175 to i32
%r177 = trunc i288 %r174 to i256
%r178 = sub i256 %r177, %r9
%r179 = lshr i256 %r178, 255
%r180 = trunc i256 %r179 to i1
%r181 = select i1 %r180, i256 %r177, i256 %r178
%r183 = bitcast i32* %r1 to i256*
store i256 %r181, i256* %r183
ret void
}
define i32 @mcl_fp_addPre8L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i256*
%r7 = load i256, i256* %r6
%r8 = zext i256 %r7 to i288
%r10 = bitcast i32* %r4 to i256*
%r11 = load i256, i256* %r10
%r12 = zext i256 %r11 to i288
%r13 = add i288 %r8, %r12
%r14 = trunc i288 %r13 to i256
%r16 = bitcast i32* %r2 to i256*
store i256 %r14, i256* %r16
%r17 = lshr i288 %r13, 256
%r18 = trunc i288 %r17 to i32
ret i32 %r18
}
define i32 @mcl_fp_subPre8L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i256*
%r7 = load i256, i256* %r6
%r8 = zext i256 %r7 to i288
%r10 = bitcast i32* %r4 to i256*
%r11 = load i256, i256* %r10
%r12 = zext i256 %r11 to i288
%r13 = sub i288 %r8, %r12
%r14 = trunc i288 %r13 to i256
%r16 = bitcast i32* %r2 to i256*
store i256 %r14, i256* %r16
%r18 = lshr i288 %r13, 256
%r19 = trunc i288 %r18 to i32
%r20 = and i32 %r19, 1
ret i32 %r20
}
define void @mcl_fp_shr1_8L(i32* noalias  %r1, i32* noalias  %r2)
{
%r4 = bitcast i32* %r2 to i256*
%r5 = load i256, i256* %r4
%r6 = lshr i256 %r5, 1
%r8 = bitcast i32* %r1 to i256*
store i256 %r6, i256* %r8
ret void
}
define void @mcl_fp_add8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i256*
%r7 = load i256, i256* %r6
%r9 = bitcast i32* %r3 to i256*
%r10 = load i256, i256* %r9
%r11 = zext i256 %r7 to i288
%r12 = zext i256 %r10 to i288
%r13 = add i288 %r11, %r12
%r15 = bitcast i32* %r4 to i256*
%r16 = load i256, i256* %r15
%r17 = zext i256 %r16 to i288
%r18 = sub i288 %r13, %r17
%r19 = lshr i288 %r18, 256
%r20 = trunc i288 %r19 to i1
%r21 = select i1 %r20, i288 %r13, i288 %r18
%r22 = trunc i288 %r21 to i256
%r24 = bitcast i32* %r1 to i256*
store i256 %r22, i256* %r24
ret void
}
define void @mcl_fp_addNF8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i256*
%r7 = load i256, i256* %r6
%r9 = bitcast i32* %r3 to i256*
%r10 = load i256, i256* %r9
%r11 = add i256 %r7, %r10
%r13 = bitcast i32* %r4 to i256*
%r14 = load i256, i256* %r13
%r15 = sub i256 %r11, %r14
%r16 = lshr i256 %r15, 255
%r17 = trunc i256 %r16 to i1
%r18 = select i1 %r17, i256 %r11, i256 %r15
%r20 = bitcast i32* %r1 to i256*
store i256 %r18, i256* %r20
ret void
}
define void @mcl_fp_sub8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i256*
%r7 = load i256, i256* %r6
%r9 = bitcast i32* %r3 to i256*
%r10 = load i256, i256* %r9
%r11 = zext i256 %r7 to i257
%r12 = zext i256 %r10 to i257
%r13 = sub i257 %r11, %r12
%r14 = lshr i257 %r13, 256
%r15 = trunc i257 %r14 to i1
%r16 = trunc i257 %r13 to i256
%r18 = bitcast i32* %r4 to i256*
%r19 = load i256, i256* %r18
%r21 = select i1 %r15, i256 %r19, i256 0
%r22 = add i256 %r16, %r21
%r24 = bitcast i32* %r1 to i256*
store i256 %r22, i256* %r24
ret void
}
define void @mcl_fp_subNF8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i256*
%r7 = load i256, i256* %r6
%r9 = bitcast i32* %r3 to i256*
%r10 = load i256, i256* %r9
%r11 = sub i256 %r7, %r10
%r12 = lshr i256 %r11, 255
%r13 = trunc i256 %r12 to i1
%r15 = bitcast i32* %r4 to i256*
%r16 = load i256, i256* %r15
%r18 = select i1 %r13, i256 %r16, i256 0
%r19 = add i256 %r11, %r18
%r21 = bitcast i32* %r1 to i256*
store i256 %r19, i256* %r21
ret void
}
define void @mcl_fpDbl_add8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = zext i512 %r7 to i544
%r12 = zext i512 %r10 to i544
%r13 = add i544 %r11, %r12
%r14 = trunc i544 %r13 to i256
%r16 = bitcast i32* %r1 to i256*
store i256 %r14, i256* %r16
%r17 = lshr i544 %r13, 256
%r18 = trunc i544 %r17 to i288
%r20 = bitcast i32* %r4 to i256*
%r21 = load i256, i256* %r20
%r22 = zext i256 %r21 to i288
%r23 = sub i288 %r18, %r22
%r24 = lshr i288 %r23, 256
%r25 = trunc i288 %r24 to i1
%r26 = select i1 %r25, i288 %r18, i288 %r23
%r27 = trunc i288 %r26 to i256
%r29 = getelementptr i32, i32* %r1, i32 8
%r31 = bitcast i32* %r29 to i256*
store i256 %r27, i256* %r31
ret void
}
define void @mcl_fpDbl_sub8L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = zext i512 %r7 to i544
%r12 = zext i512 %r10 to i544
%r13 = sub i544 %r11, %r12
%r14 = trunc i544 %r13 to i256
%r16 = bitcast i32* %r1 to i256*
store i256 %r14, i256* %r16
%r17 = lshr i544 %r13, 256
%r18 = trunc i544 %r17 to i256
%r19 = lshr i544 %r13, 512
%r20 = trunc i544 %r19 to i1
%r22 = bitcast i32* %r4 to i256*
%r23 = load i256, i256* %r22
%r25 = select i1 %r20, i256 %r23, i256 0
%r26 = add i256 %r18, %r25
%r28 = getelementptr i32, i32* %r1, i32 8
%r30 = bitcast i32* %r28 to i256*
store i256 %r26, i256* %r30
ret void
}
define i416 @mulPv384x32(i32* noalias  %r2, i32 %r3)
{
%r5 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 0)
%r6 = trunc i64 %r5 to i32
%r7 = call i32 @extractHigh32(i64 %r5)
%r9 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 1)
%r10 = trunc i64 %r9 to i32
%r11 = call i32 @extractHigh32(i64 %r9)
%r13 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 2)
%r14 = trunc i64 %r13 to i32
%r15 = call i32 @extractHigh32(i64 %r13)
%r17 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 3)
%r18 = trunc i64 %r17 to i32
%r19 = call i32 @extractHigh32(i64 %r17)
%r21 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 4)
%r22 = trunc i64 %r21 to i32
%r23 = call i32 @extractHigh32(i64 %r21)
%r25 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 5)
%r26 = trunc i64 %r25 to i32
%r27 = call i32 @extractHigh32(i64 %r25)
%r29 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 6)
%r30 = trunc i64 %r29 to i32
%r31 = call i32 @extractHigh32(i64 %r29)
%r33 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 7)
%r34 = trunc i64 %r33 to i32
%r35 = call i32 @extractHigh32(i64 %r33)
%r37 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 8)
%r38 = trunc i64 %r37 to i32
%r39 = call i32 @extractHigh32(i64 %r37)
%r41 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 9)
%r42 = trunc i64 %r41 to i32
%r43 = call i32 @extractHigh32(i64 %r41)
%r45 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 10)
%r46 = trunc i64 %r45 to i32
%r47 = call i32 @extractHigh32(i64 %r45)
%r49 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 11)
%r50 = trunc i64 %r49 to i32
%r51 = call i32 @extractHigh32(i64 %r49)
%r52 = zext i32 %r6 to i64
%r53 = zext i32 %r10 to i64
%r54 = shl i64 %r53, 32
%r55 = or i64 %r52, %r54
%r56 = zext i64 %r55 to i96
%r57 = zext i32 %r14 to i96
%r58 = shl i96 %r57, 64
%r59 = or i96 %r56, %r58
%r60 = zext i96 %r59 to i128
%r61 = zext i32 %r18 to i128
%r62 = shl i128 %r61, 96
%r63 = or i128 %r60, %r62
%r64 = zext i128 %r63 to i160
%r65 = zext i32 %r22 to i160
%r66 = shl i160 %r65, 128
%r67 = or i160 %r64, %r66
%r68 = zext i160 %r67 to i192
%r69 = zext i32 %r26 to i192
%r70 = shl i192 %r69, 160
%r71 = or i192 %r68, %r70
%r72 = zext i192 %r71 to i224
%r73 = zext i32 %r30 to i224
%r74 = shl i224 %r73, 192
%r75 = or i224 %r72, %r74
%r76 = zext i224 %r75 to i256
%r77 = zext i32 %r34 to i256
%r78 = shl i256 %r77, 224
%r79 = or i256 %r76, %r78
%r80 = zext i256 %r79 to i288
%r81 = zext i32 %r38 to i288
%r82 = shl i288 %r81, 256
%r83 = or i288 %r80, %r82
%r84 = zext i288 %r83 to i320
%r85 = zext i32 %r42 to i320
%r86 = shl i320 %r85, 288
%r87 = or i320 %r84, %r86
%r88 = zext i320 %r87 to i352
%r89 = zext i32 %r46 to i352
%r90 = shl i352 %r89, 320
%r91 = or i352 %r88, %r90
%r92 = zext i352 %r91 to i384
%r93 = zext i32 %r50 to i384
%r94 = shl i384 %r93, 352
%r95 = or i384 %r92, %r94
%r96 = zext i32 %r7 to i64
%r97 = zext i32 %r11 to i64
%r98 = shl i64 %r97, 32
%r99 = or i64 %r96, %r98
%r100 = zext i64 %r99 to i96
%r101 = zext i32 %r15 to i96
%r102 = shl i96 %r101, 64
%r103 = or i96 %r100, %r102
%r104 = zext i96 %r103 to i128
%r105 = zext i32 %r19 to i128
%r106 = shl i128 %r105, 96
%r107 = or i128 %r104, %r106
%r108 = zext i128 %r107 to i160
%r109 = zext i32 %r23 to i160
%r110 = shl i160 %r109, 128
%r111 = or i160 %r108, %r110
%r112 = zext i160 %r111 to i192
%r113 = zext i32 %r27 to i192
%r114 = shl i192 %r113, 160
%r115 = or i192 %r112, %r114
%r116 = zext i192 %r115 to i224
%r117 = zext i32 %r31 to i224
%r118 = shl i224 %r117, 192
%r119 = or i224 %r116, %r118
%r120 = zext i224 %r119 to i256
%r121 = zext i32 %r35 to i256
%r122 = shl i256 %r121, 224
%r123 = or i256 %r120, %r122
%r124 = zext i256 %r123 to i288
%r125 = zext i32 %r39 to i288
%r126 = shl i288 %r125, 256
%r127 = or i288 %r124, %r126
%r128 = zext i288 %r127 to i320
%r129 = zext i32 %r43 to i320
%r130 = shl i320 %r129, 288
%r131 = or i320 %r128, %r130
%r132 = zext i320 %r131 to i352
%r133 = zext i32 %r47 to i352
%r134 = shl i352 %r133, 320
%r135 = or i352 %r132, %r134
%r136 = zext i352 %r135 to i384
%r137 = zext i32 %r51 to i384
%r138 = shl i384 %r137, 352
%r139 = or i384 %r136, %r138
%r140 = zext i384 %r95 to i416
%r141 = zext i384 %r139 to i416
%r142 = shl i416 %r141, 32
%r143 = add i416 %r140, %r142
ret i416 %r143
}
define void @mcl_fp_mont12L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r9 = getelementptr i32, i32* %r3, i32 0
%r10 = load i32, i32* %r9
%r11 = call i416 @mulPv384x32(i32* %r2, i32 %r10)
%r12 = zext i416 %r11 to i448
%r13 = trunc i416 %r11 to i32
%r14 = mul i32 %r13, %r7
%r15 = call i416 @mulPv384x32(i32* %r4, i32 %r14)
%r16 = zext i416 %r15 to i448
%r17 = add i448 %r12, %r16
%r18 = lshr i448 %r17, 32
%r20 = getelementptr i32, i32* %r3, i32 1
%r21 = load i32, i32* %r20
%r22 = call i416 @mulPv384x32(i32* %r2, i32 %r21)
%r23 = zext i416 %r22 to i448
%r24 = add i448 %r18, %r23
%r25 = trunc i448 %r24 to i32
%r26 = mul i32 %r25, %r7
%r27 = call i416 @mulPv384x32(i32* %r4, i32 %r26)
%r28 = zext i416 %r27 to i448
%r29 = add i448 %r24, %r28
%r30 = lshr i448 %r29, 32
%r32 = getelementptr i32, i32* %r3, i32 2
%r33 = load i32, i32* %r32
%r34 = call i416 @mulPv384x32(i32* %r2, i32 %r33)
%r35 = zext i416 %r34 to i448
%r36 = add i448 %r30, %r35
%r37 = trunc i448 %r36 to i32
%r38 = mul i32 %r37, %r7
%r39 = call i416 @mulPv384x32(i32* %r4, i32 %r38)
%r40 = zext i416 %r39 to i448
%r41 = add i448 %r36, %r40
%r42 = lshr i448 %r41, 32
%r44 = getelementptr i32, i32* %r3, i32 3
%r45 = load i32, i32* %r44
%r46 = call i416 @mulPv384x32(i32* %r2, i32 %r45)
%r47 = zext i416 %r46 to i448
%r48 = add i448 %r42, %r47
%r49 = trunc i448 %r48 to i32
%r50 = mul i32 %r49, %r7
%r51 = call i416 @mulPv384x32(i32* %r4, i32 %r50)
%r52 = zext i416 %r51 to i448
%r53 = add i448 %r48, %r52
%r54 = lshr i448 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 4
%r57 = load i32, i32* %r56
%r58 = call i416 @mulPv384x32(i32* %r2, i32 %r57)
%r59 = zext i416 %r58 to i448
%r60 = add i448 %r54, %r59
%r61 = trunc i448 %r60 to i32
%r62 = mul i32 %r61, %r7
%r63 = call i416 @mulPv384x32(i32* %r4, i32 %r62)
%r64 = zext i416 %r63 to i448
%r65 = add i448 %r60, %r64
%r66 = lshr i448 %r65, 32
%r68 = getelementptr i32, i32* %r3, i32 5
%r69 = load i32, i32* %r68
%r70 = call i416 @mulPv384x32(i32* %r2, i32 %r69)
%r71 = zext i416 %r70 to i448
%r72 = add i448 %r66, %r71
%r73 = trunc i448 %r72 to i32
%r74 = mul i32 %r73, %r7
%r75 = call i416 @mulPv384x32(i32* %r4, i32 %r74)
%r76 = zext i416 %r75 to i448
%r77 = add i448 %r72, %r76
%r78 = lshr i448 %r77, 32
%r80 = getelementptr i32, i32* %r3, i32 6
%r81 = load i32, i32* %r80
%r82 = call i416 @mulPv384x32(i32* %r2, i32 %r81)
%r83 = zext i416 %r82 to i448
%r84 = add i448 %r78, %r83
%r85 = trunc i448 %r84 to i32
%r86 = mul i32 %r85, %r7
%r87 = call i416 @mulPv384x32(i32* %r4, i32 %r86)
%r88 = zext i416 %r87 to i448
%r89 = add i448 %r84, %r88
%r90 = lshr i448 %r89, 32
%r92 = getelementptr i32, i32* %r3, i32 7
%r93 = load i32, i32* %r92
%r94 = call i416 @mulPv384x32(i32* %r2, i32 %r93)
%r95 = zext i416 %r94 to i448
%r96 = add i448 %r90, %r95
%r97 = trunc i448 %r96 to i32
%r98 = mul i32 %r97, %r7
%r99 = call i416 @mulPv384x32(i32* %r4, i32 %r98)
%r100 = zext i416 %r99 to i448
%r101 = add i448 %r96, %r100
%r102 = lshr i448 %r101, 32
%r104 = getelementptr i32, i32* %r3, i32 8
%r105 = load i32, i32* %r104
%r106 = call i416 @mulPv384x32(i32* %r2, i32 %r105)
%r107 = zext i416 %r106 to i448
%r108 = add i448 %r102, %r107
%r109 = trunc i448 %r108 to i32
%r110 = mul i32 %r109, %r7
%r111 = call i416 @mulPv384x32(i32* %r4, i32 %r110)
%r112 = zext i416 %r111 to i448
%r113 = add i448 %r108, %r112
%r114 = lshr i448 %r113, 32
%r116 = getelementptr i32, i32* %r3, i32 9
%r117 = load i32, i32* %r116
%r118 = call i416 @mulPv384x32(i32* %r2, i32 %r117)
%r119 = zext i416 %r118 to i448
%r120 = add i448 %r114, %r119
%r121 = trunc i448 %r120 to i32
%r122 = mul i32 %r121, %r7
%r123 = call i416 @mulPv384x32(i32* %r4, i32 %r122)
%r124 = zext i416 %r123 to i448
%r125 = add i448 %r120, %r124
%r126 = lshr i448 %r125, 32
%r128 = getelementptr i32, i32* %r3, i32 10
%r129 = load i32, i32* %r128
%r130 = call i416 @mulPv384x32(i32* %r2, i32 %r129)
%r131 = zext i416 %r130 to i448
%r132 = add i448 %r126, %r131
%r133 = trunc i448 %r132 to i32
%r134 = mul i32 %r133, %r7
%r135 = call i416 @mulPv384x32(i32* %r4, i32 %r134)
%r136 = zext i416 %r135 to i448
%r137 = add i448 %r132, %r136
%r138 = lshr i448 %r137, 32
%r140 = getelementptr i32, i32* %r3, i32 11
%r141 = load i32, i32* %r140
%r142 = call i416 @mulPv384x32(i32* %r2, i32 %r141)
%r143 = zext i416 %r142 to i448
%r144 = add i448 %r138, %r143
%r145 = trunc i448 %r144 to i32
%r146 = mul i32 %r145, %r7
%r147 = call i416 @mulPv384x32(i32* %r4, i32 %r146)
%r148 = zext i416 %r147 to i448
%r149 = add i448 %r144, %r148
%r150 = lshr i448 %r149, 32
%r151 = trunc i448 %r150 to i416
%r153 = bitcast i32* %r4 to i384*
%r154 = load i384, i384* %r153
%r155 = zext i384 %r154 to i416
%r156 = sub i416 %r151, %r155
%r157 = lshr i416 %r156, 384
%r158 = trunc i416 %r157 to i1
%r159 = select i1 %r158, i416 %r151, i416 %r156
%r160 = trunc i416 %r159 to i384
%r162 = bitcast i32* %r1 to i384*
store i384 %r160, i384* %r162
ret void
}
define void @mcl_fp_montNF12L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r8 = load i32, i32* %r3
%r9 = call i416 @mulPv384x32(i32* %r2, i32 %r8)
%r10 = trunc i416 %r9 to i32
%r11 = mul i32 %r10, %r7
%r12 = call i416 @mulPv384x32(i32* %r4, i32 %r11)
%r13 = add i416 %r9, %r12
%r14 = lshr i416 %r13, 32
%r16 = getelementptr i32, i32* %r3, i32 1
%r17 = load i32, i32* %r16
%r18 = call i416 @mulPv384x32(i32* %r2, i32 %r17)
%r19 = add i416 %r14, %r18
%r20 = trunc i416 %r19 to i32
%r21 = mul i32 %r20, %r7
%r22 = call i416 @mulPv384x32(i32* %r4, i32 %r21)
%r23 = add i416 %r19, %r22
%r24 = lshr i416 %r23, 32
%r26 = getelementptr i32, i32* %r3, i32 2
%r27 = load i32, i32* %r26
%r28 = call i416 @mulPv384x32(i32* %r2, i32 %r27)
%r29 = add i416 %r24, %r28
%r30 = trunc i416 %r29 to i32
%r31 = mul i32 %r30, %r7
%r32 = call i416 @mulPv384x32(i32* %r4, i32 %r31)
%r33 = add i416 %r29, %r32
%r34 = lshr i416 %r33, 32
%r36 = getelementptr i32, i32* %r3, i32 3
%r37 = load i32, i32* %r36
%r38 = call i416 @mulPv384x32(i32* %r2, i32 %r37)
%r39 = add i416 %r34, %r38
%r40 = trunc i416 %r39 to i32
%r41 = mul i32 %r40, %r7
%r42 = call i416 @mulPv384x32(i32* %r4, i32 %r41)
%r43 = add i416 %r39, %r42
%r44 = lshr i416 %r43, 32
%r46 = getelementptr i32, i32* %r3, i32 4
%r47 = load i32, i32* %r46
%r48 = call i416 @mulPv384x32(i32* %r2, i32 %r47)
%r49 = add i416 %r44, %r48
%r50 = trunc i416 %r49 to i32
%r51 = mul i32 %r50, %r7
%r52 = call i416 @mulPv384x32(i32* %r4, i32 %r51)
%r53 = add i416 %r49, %r52
%r54 = lshr i416 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 5
%r57 = load i32, i32* %r56
%r58 = call i416 @mulPv384x32(i32* %r2, i32 %r57)
%r59 = add i416 %r54, %r58
%r60 = trunc i416 %r59 to i32
%r61 = mul i32 %r60, %r7
%r62 = call i416 @mulPv384x32(i32* %r4, i32 %r61)
%r63 = add i416 %r59, %r62
%r64 = lshr i416 %r63, 32
%r66 = getelementptr i32, i32* %r3, i32 6
%r67 = load i32, i32* %r66
%r68 = call i416 @mulPv384x32(i32* %r2, i32 %r67)
%r69 = add i416 %r64, %r68
%r70 = trunc i416 %r69 to i32
%r71 = mul i32 %r70, %r7
%r72 = call i416 @mulPv384x32(i32* %r4, i32 %r71)
%r73 = add i416 %r69, %r72
%r74 = lshr i416 %r73, 32
%r76 = getelementptr i32, i32* %r3, i32 7
%r77 = load i32, i32* %r76
%r78 = call i416 @mulPv384x32(i32* %r2, i32 %r77)
%r79 = add i416 %r74, %r78
%r80 = trunc i416 %r79 to i32
%r81 = mul i32 %r80, %r7
%r82 = call i416 @mulPv384x32(i32* %r4, i32 %r81)
%r83 = add i416 %r79, %r82
%r84 = lshr i416 %r83, 32
%r86 = getelementptr i32, i32* %r3, i32 8
%r87 = load i32, i32* %r86
%r88 = call i416 @mulPv384x32(i32* %r2, i32 %r87)
%r89 = add i416 %r84, %r88
%r90 = trunc i416 %r89 to i32
%r91 = mul i32 %r90, %r7
%r92 = call i416 @mulPv384x32(i32* %r4, i32 %r91)
%r93 = add i416 %r89, %r92
%r94 = lshr i416 %r93, 32
%r96 = getelementptr i32, i32* %r3, i32 9
%r97 = load i32, i32* %r96
%r98 = call i416 @mulPv384x32(i32* %r2, i32 %r97)
%r99 = add i416 %r94, %r98
%r100 = trunc i416 %r99 to i32
%r101 = mul i32 %r100, %r7
%r102 = call i416 @mulPv384x32(i32* %r4, i32 %r101)
%r103 = add i416 %r99, %r102
%r104 = lshr i416 %r103, 32
%r106 = getelementptr i32, i32* %r3, i32 10
%r107 = load i32, i32* %r106
%r108 = call i416 @mulPv384x32(i32* %r2, i32 %r107)
%r109 = add i416 %r104, %r108
%r110 = trunc i416 %r109 to i32
%r111 = mul i32 %r110, %r7
%r112 = call i416 @mulPv384x32(i32* %r4, i32 %r111)
%r113 = add i416 %r109, %r112
%r114 = lshr i416 %r113, 32
%r116 = getelementptr i32, i32* %r3, i32 11
%r117 = load i32, i32* %r116
%r118 = call i416 @mulPv384x32(i32* %r2, i32 %r117)
%r119 = add i416 %r114, %r118
%r120 = trunc i416 %r119 to i32
%r121 = mul i32 %r120, %r7
%r122 = call i416 @mulPv384x32(i32* %r4, i32 %r121)
%r123 = add i416 %r119, %r122
%r124 = lshr i416 %r123, 32
%r125 = trunc i416 %r124 to i384
%r127 = bitcast i32* %r4 to i384*
%r128 = load i384, i384* %r127
%r129 = sub i384 %r125, %r128
%r130 = lshr i384 %r129, 383
%r131 = trunc i384 %r130 to i1
%r132 = select i1 %r131, i384 %r125, i384 %r129
%r134 = bitcast i32* %r1 to i384*
store i384 %r132, i384* %r134
ret void
}
define void @mcl_fp_montRed12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i384*
%r9 = load i384, i384* %r8
%r11 = bitcast i32* %r2 to i384*
%r12 = load i384, i384* %r11
%r13 = trunc i384 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i416 @mulPv384x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 12
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i416
%r20 = shl i416 %r19, 384
%r21 = zext i384 %r12 to i416
%r22 = or i416 %r20, %r21
%r23 = zext i416 %r22 to i448
%r24 = zext i416 %r15 to i448
%r25 = add i448 %r23, %r24
%r26 = lshr i448 %r25, 32
%r27 = trunc i448 %r26 to i416
%r28 = lshr i416 %r27, 384
%r29 = trunc i416 %r28 to i32
%r30 = trunc i416 %r27 to i384
%r31 = trunc i384 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i416 @mulPv384x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i416
%r35 = shl i416 %r34, 384
%r36 = add i416 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 13
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i416
%r41 = shl i416 %r40, 384
%r42 = zext i384 %r30 to i416
%r43 = or i416 %r41, %r42
%r44 = zext i416 %r43 to i448
%r45 = zext i416 %r36 to i448
%r46 = add i448 %r44, %r45
%r47 = lshr i448 %r46, 32
%r48 = trunc i448 %r47 to i416
%r49 = lshr i416 %r48, 384
%r50 = trunc i416 %r49 to i32
%r51 = trunc i416 %r48 to i384
%r52 = trunc i384 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i416 @mulPv384x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i416
%r56 = shl i416 %r55, 384
%r57 = add i416 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 14
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i416
%r62 = shl i416 %r61, 384
%r63 = zext i384 %r51 to i416
%r64 = or i416 %r62, %r63
%r65 = zext i416 %r64 to i448
%r66 = zext i416 %r57 to i448
%r67 = add i448 %r65, %r66
%r68 = lshr i448 %r67, 32
%r69 = trunc i448 %r68 to i416
%r70 = lshr i416 %r69, 384
%r71 = trunc i416 %r70 to i32
%r72 = trunc i416 %r69 to i384
%r73 = trunc i384 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i416 @mulPv384x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i416
%r77 = shl i416 %r76, 384
%r78 = add i416 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 15
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i416
%r83 = shl i416 %r82, 384
%r84 = zext i384 %r72 to i416
%r85 = or i416 %r83, %r84
%r86 = zext i416 %r85 to i448
%r87 = zext i416 %r78 to i448
%r88 = add i448 %r86, %r87
%r89 = lshr i448 %r88, 32
%r90 = trunc i448 %r89 to i416
%r91 = lshr i416 %r90, 384
%r92 = trunc i416 %r91 to i32
%r93 = trunc i416 %r90 to i384
%r94 = trunc i384 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i416 @mulPv384x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i416
%r98 = shl i416 %r97, 384
%r99 = add i416 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 16
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i416
%r104 = shl i416 %r103, 384
%r105 = zext i384 %r93 to i416
%r106 = or i416 %r104, %r105
%r107 = zext i416 %r106 to i448
%r108 = zext i416 %r99 to i448
%r109 = add i448 %r107, %r108
%r110 = lshr i448 %r109, 32
%r111 = trunc i448 %r110 to i416
%r112 = lshr i416 %r111, 384
%r113 = trunc i416 %r112 to i32
%r114 = trunc i416 %r111 to i384
%r115 = trunc i384 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i416 @mulPv384x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i416
%r119 = shl i416 %r118, 384
%r120 = add i416 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 17
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i416
%r125 = shl i416 %r124, 384
%r126 = zext i384 %r114 to i416
%r127 = or i416 %r125, %r126
%r128 = zext i416 %r127 to i448
%r129 = zext i416 %r120 to i448
%r130 = add i448 %r128, %r129
%r131 = lshr i448 %r130, 32
%r132 = trunc i448 %r131 to i416
%r133 = lshr i416 %r132, 384
%r134 = trunc i416 %r133 to i32
%r135 = trunc i416 %r132 to i384
%r136 = trunc i384 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i416 @mulPv384x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i416
%r140 = shl i416 %r139, 384
%r141 = add i416 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 18
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i416
%r146 = shl i416 %r145, 384
%r147 = zext i384 %r135 to i416
%r148 = or i416 %r146, %r147
%r149 = zext i416 %r148 to i448
%r150 = zext i416 %r141 to i448
%r151 = add i448 %r149, %r150
%r152 = lshr i448 %r151, 32
%r153 = trunc i448 %r152 to i416
%r154 = lshr i416 %r153, 384
%r155 = trunc i416 %r154 to i32
%r156 = trunc i416 %r153 to i384
%r157 = trunc i384 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i416 @mulPv384x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i416
%r161 = shl i416 %r160, 384
%r162 = add i416 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 19
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i416
%r167 = shl i416 %r166, 384
%r168 = zext i384 %r156 to i416
%r169 = or i416 %r167, %r168
%r170 = zext i416 %r169 to i448
%r171 = zext i416 %r162 to i448
%r172 = add i448 %r170, %r171
%r173 = lshr i448 %r172, 32
%r174 = trunc i448 %r173 to i416
%r175 = lshr i416 %r174, 384
%r176 = trunc i416 %r175 to i32
%r177 = trunc i416 %r174 to i384
%r178 = trunc i384 %r177 to i32
%r179 = mul i32 %r178, %r6
%r180 = call i416 @mulPv384x32(i32* %r3, i32 %r179)
%r181 = zext i32 %r176 to i416
%r182 = shl i416 %r181, 384
%r183 = add i416 %r180, %r182
%r185 = getelementptr i32, i32* %r2, i32 20
%r186 = load i32, i32* %r185
%r187 = zext i32 %r186 to i416
%r188 = shl i416 %r187, 384
%r189 = zext i384 %r177 to i416
%r190 = or i416 %r188, %r189
%r191 = zext i416 %r190 to i448
%r192 = zext i416 %r183 to i448
%r193 = add i448 %r191, %r192
%r194 = lshr i448 %r193, 32
%r195 = trunc i448 %r194 to i416
%r196 = lshr i416 %r195, 384
%r197 = trunc i416 %r196 to i32
%r198 = trunc i416 %r195 to i384
%r199 = trunc i384 %r198 to i32
%r200 = mul i32 %r199, %r6
%r201 = call i416 @mulPv384x32(i32* %r3, i32 %r200)
%r202 = zext i32 %r197 to i416
%r203 = shl i416 %r202, 384
%r204 = add i416 %r201, %r203
%r206 = getelementptr i32, i32* %r2, i32 21
%r207 = load i32, i32* %r206
%r208 = zext i32 %r207 to i416
%r209 = shl i416 %r208, 384
%r210 = zext i384 %r198 to i416
%r211 = or i416 %r209, %r210
%r212 = zext i416 %r211 to i448
%r213 = zext i416 %r204 to i448
%r214 = add i448 %r212, %r213
%r215 = lshr i448 %r214, 32
%r216 = trunc i448 %r215 to i416
%r217 = lshr i416 %r216, 384
%r218 = trunc i416 %r217 to i32
%r219 = trunc i416 %r216 to i384
%r220 = trunc i384 %r219 to i32
%r221 = mul i32 %r220, %r6
%r222 = call i416 @mulPv384x32(i32* %r3, i32 %r221)
%r223 = zext i32 %r218 to i416
%r224 = shl i416 %r223, 384
%r225 = add i416 %r222, %r224
%r227 = getelementptr i32, i32* %r2, i32 22
%r228 = load i32, i32* %r227
%r229 = zext i32 %r228 to i416
%r230 = shl i416 %r229, 384
%r231 = zext i384 %r219 to i416
%r232 = or i416 %r230, %r231
%r233 = zext i416 %r232 to i448
%r234 = zext i416 %r225 to i448
%r235 = add i448 %r233, %r234
%r236 = lshr i448 %r235, 32
%r237 = trunc i448 %r236 to i416
%r238 = lshr i416 %r237, 384
%r239 = trunc i416 %r238 to i32
%r240 = trunc i416 %r237 to i384
%r241 = trunc i384 %r240 to i32
%r242 = mul i32 %r241, %r6
%r243 = call i416 @mulPv384x32(i32* %r3, i32 %r242)
%r244 = zext i32 %r239 to i416
%r245 = shl i416 %r244, 384
%r246 = add i416 %r243, %r245
%r248 = getelementptr i32, i32* %r2, i32 23
%r249 = load i32, i32* %r248
%r250 = zext i32 %r249 to i416
%r251 = shl i416 %r250, 384
%r252 = zext i384 %r240 to i416
%r253 = or i416 %r251, %r252
%r254 = zext i416 %r253 to i448
%r255 = zext i416 %r246 to i448
%r256 = add i448 %r254, %r255
%r257 = lshr i448 %r256, 32
%r258 = trunc i448 %r257 to i416
%r259 = lshr i416 %r258, 384
%r260 = trunc i416 %r259 to i32
%r261 = trunc i416 %r258 to i384
%r262 = zext i384 %r9 to i416
%r263 = zext i32 %r260 to i416
%r264 = shl i416 %r263, 384
%r265 = zext i384 %r261 to i416
%r266 = or i416 %r264, %r265
%r267 = sub i416 %r266, %r262
%r268 = lshr i416 %r267, 384
%r269 = trunc i416 %r268 to i1
%r270 = select i1 %r269, i416 %r266, i416 %r267
%r271 = trunc i416 %r270 to i384
%r273 = bitcast i32* %r1 to i384*
store i384 %r271, i384* %r273
ret void
}
define void @mcl_fp_montRedNF12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i384*
%r9 = load i384, i384* %r8
%r11 = bitcast i32* %r2 to i384*
%r12 = load i384, i384* %r11
%r13 = trunc i384 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i416 @mulPv384x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 12
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i416
%r20 = shl i416 %r19, 384
%r21 = zext i384 %r12 to i416
%r22 = or i416 %r20, %r21
%r23 = zext i416 %r22 to i448
%r24 = zext i416 %r15 to i448
%r25 = add i448 %r23, %r24
%r26 = lshr i448 %r25, 32
%r27 = trunc i448 %r26 to i416
%r28 = lshr i416 %r27, 384
%r29 = trunc i416 %r28 to i32
%r30 = trunc i416 %r27 to i384
%r31 = trunc i384 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i416 @mulPv384x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i416
%r35 = shl i416 %r34, 384
%r36 = add i416 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 13
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i416
%r41 = shl i416 %r40, 384
%r42 = zext i384 %r30 to i416
%r43 = or i416 %r41, %r42
%r44 = zext i416 %r43 to i448
%r45 = zext i416 %r36 to i448
%r46 = add i448 %r44, %r45
%r47 = lshr i448 %r46, 32
%r48 = trunc i448 %r47 to i416
%r49 = lshr i416 %r48, 384
%r50 = trunc i416 %r49 to i32
%r51 = trunc i416 %r48 to i384
%r52 = trunc i384 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i416 @mulPv384x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i416
%r56 = shl i416 %r55, 384
%r57 = add i416 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 14
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i416
%r62 = shl i416 %r61, 384
%r63 = zext i384 %r51 to i416
%r64 = or i416 %r62, %r63
%r65 = zext i416 %r64 to i448
%r66 = zext i416 %r57 to i448
%r67 = add i448 %r65, %r66
%r68 = lshr i448 %r67, 32
%r69 = trunc i448 %r68 to i416
%r70 = lshr i416 %r69, 384
%r71 = trunc i416 %r70 to i32
%r72 = trunc i416 %r69 to i384
%r73 = trunc i384 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i416 @mulPv384x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i416
%r77 = shl i416 %r76, 384
%r78 = add i416 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 15
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i416
%r83 = shl i416 %r82, 384
%r84 = zext i384 %r72 to i416
%r85 = or i416 %r83, %r84
%r86 = zext i416 %r85 to i448
%r87 = zext i416 %r78 to i448
%r88 = add i448 %r86, %r87
%r89 = lshr i448 %r88, 32
%r90 = trunc i448 %r89 to i416
%r91 = lshr i416 %r90, 384
%r92 = trunc i416 %r91 to i32
%r93 = trunc i416 %r90 to i384
%r94 = trunc i384 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i416 @mulPv384x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i416
%r98 = shl i416 %r97, 384
%r99 = add i416 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 16
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i416
%r104 = shl i416 %r103, 384
%r105 = zext i384 %r93 to i416
%r106 = or i416 %r104, %r105
%r107 = zext i416 %r106 to i448
%r108 = zext i416 %r99 to i448
%r109 = add i448 %r107, %r108
%r110 = lshr i448 %r109, 32
%r111 = trunc i448 %r110 to i416
%r112 = lshr i416 %r111, 384
%r113 = trunc i416 %r112 to i32
%r114 = trunc i416 %r111 to i384
%r115 = trunc i384 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i416 @mulPv384x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i416
%r119 = shl i416 %r118, 384
%r120 = add i416 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 17
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i416
%r125 = shl i416 %r124, 384
%r126 = zext i384 %r114 to i416
%r127 = or i416 %r125, %r126
%r128 = zext i416 %r127 to i448
%r129 = zext i416 %r120 to i448
%r130 = add i448 %r128, %r129
%r131 = lshr i448 %r130, 32
%r132 = trunc i448 %r131 to i416
%r133 = lshr i416 %r132, 384
%r134 = trunc i416 %r133 to i32
%r135 = trunc i416 %r132 to i384
%r136 = trunc i384 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i416 @mulPv384x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i416
%r140 = shl i416 %r139, 384
%r141 = add i416 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 18
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i416
%r146 = shl i416 %r145, 384
%r147 = zext i384 %r135 to i416
%r148 = or i416 %r146, %r147
%r149 = zext i416 %r148 to i448
%r150 = zext i416 %r141 to i448
%r151 = add i448 %r149, %r150
%r152 = lshr i448 %r151, 32
%r153 = trunc i448 %r152 to i416
%r154 = lshr i416 %r153, 384
%r155 = trunc i416 %r154 to i32
%r156 = trunc i416 %r153 to i384
%r157 = trunc i384 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i416 @mulPv384x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i416
%r161 = shl i416 %r160, 384
%r162 = add i416 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 19
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i416
%r167 = shl i416 %r166, 384
%r168 = zext i384 %r156 to i416
%r169 = or i416 %r167, %r168
%r170 = zext i416 %r169 to i448
%r171 = zext i416 %r162 to i448
%r172 = add i448 %r170, %r171
%r173 = lshr i448 %r172, 32
%r174 = trunc i448 %r173 to i416
%r175 = lshr i416 %r174, 384
%r176 = trunc i416 %r175 to i32
%r177 = trunc i416 %r174 to i384
%r178 = trunc i384 %r177 to i32
%r179 = mul i32 %r178, %r6
%r180 = call i416 @mulPv384x32(i32* %r3, i32 %r179)
%r181 = zext i32 %r176 to i416
%r182 = shl i416 %r181, 384
%r183 = add i416 %r180, %r182
%r185 = getelementptr i32, i32* %r2, i32 20
%r186 = load i32, i32* %r185
%r187 = zext i32 %r186 to i416
%r188 = shl i416 %r187, 384
%r189 = zext i384 %r177 to i416
%r190 = or i416 %r188, %r189
%r191 = zext i416 %r190 to i448
%r192 = zext i416 %r183 to i448
%r193 = add i448 %r191, %r192
%r194 = lshr i448 %r193, 32
%r195 = trunc i448 %r194 to i416
%r196 = lshr i416 %r195, 384
%r197 = trunc i416 %r196 to i32
%r198 = trunc i416 %r195 to i384
%r199 = trunc i384 %r198 to i32
%r200 = mul i32 %r199, %r6
%r201 = call i416 @mulPv384x32(i32* %r3, i32 %r200)
%r202 = zext i32 %r197 to i416
%r203 = shl i416 %r202, 384
%r204 = add i416 %r201, %r203
%r206 = getelementptr i32, i32* %r2, i32 21
%r207 = load i32, i32* %r206
%r208 = zext i32 %r207 to i416
%r209 = shl i416 %r208, 384
%r210 = zext i384 %r198 to i416
%r211 = or i416 %r209, %r210
%r212 = zext i416 %r211 to i448
%r213 = zext i416 %r204 to i448
%r214 = add i448 %r212, %r213
%r215 = lshr i448 %r214, 32
%r216 = trunc i448 %r215 to i416
%r217 = lshr i416 %r216, 384
%r218 = trunc i416 %r217 to i32
%r219 = trunc i416 %r216 to i384
%r220 = trunc i384 %r219 to i32
%r221 = mul i32 %r220, %r6
%r222 = call i416 @mulPv384x32(i32* %r3, i32 %r221)
%r223 = zext i32 %r218 to i416
%r224 = shl i416 %r223, 384
%r225 = add i416 %r222, %r224
%r227 = getelementptr i32, i32* %r2, i32 22
%r228 = load i32, i32* %r227
%r229 = zext i32 %r228 to i416
%r230 = shl i416 %r229, 384
%r231 = zext i384 %r219 to i416
%r232 = or i416 %r230, %r231
%r233 = zext i416 %r232 to i448
%r234 = zext i416 %r225 to i448
%r235 = add i448 %r233, %r234
%r236 = lshr i448 %r235, 32
%r237 = trunc i448 %r236 to i416
%r238 = lshr i416 %r237, 384
%r239 = trunc i416 %r238 to i32
%r240 = trunc i416 %r237 to i384
%r241 = trunc i384 %r240 to i32
%r242 = mul i32 %r241, %r6
%r243 = call i416 @mulPv384x32(i32* %r3, i32 %r242)
%r244 = zext i32 %r239 to i416
%r245 = shl i416 %r244, 384
%r246 = add i416 %r243, %r245
%r248 = getelementptr i32, i32* %r2, i32 23
%r249 = load i32, i32* %r248
%r250 = zext i32 %r249 to i416
%r251 = shl i416 %r250, 384
%r252 = zext i384 %r240 to i416
%r253 = or i416 %r251, %r252
%r254 = zext i416 %r253 to i448
%r255 = zext i416 %r246 to i448
%r256 = add i448 %r254, %r255
%r257 = lshr i448 %r256, 32
%r258 = trunc i448 %r257 to i416
%r259 = lshr i416 %r258, 384
%r260 = trunc i416 %r259 to i32
%r261 = trunc i416 %r258 to i384
%r262 = sub i384 %r261, %r9
%r263 = lshr i384 %r262, 383
%r264 = trunc i384 %r263 to i1
%r265 = select i1 %r264, i384 %r261, i384 %r262
%r267 = bitcast i32* %r1 to i384*
store i384 %r265, i384* %r267
ret void
}
define i32 @mcl_fp_addPre12L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i384*
%r7 = load i384, i384* %r6
%r8 = zext i384 %r7 to i416
%r10 = bitcast i32* %r4 to i384*
%r11 = load i384, i384* %r10
%r12 = zext i384 %r11 to i416
%r13 = add i416 %r8, %r12
%r14 = trunc i416 %r13 to i384
%r16 = bitcast i32* %r2 to i384*
store i384 %r14, i384* %r16
%r17 = lshr i416 %r13, 384
%r18 = trunc i416 %r17 to i32
ret i32 %r18
}
define i32 @mcl_fp_subPre12L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i384*
%r7 = load i384, i384* %r6
%r8 = zext i384 %r7 to i416
%r10 = bitcast i32* %r4 to i384*
%r11 = load i384, i384* %r10
%r12 = zext i384 %r11 to i416
%r13 = sub i416 %r8, %r12
%r14 = trunc i416 %r13 to i384
%r16 = bitcast i32* %r2 to i384*
store i384 %r14, i384* %r16
%r18 = lshr i416 %r13, 384
%r19 = trunc i416 %r18 to i32
%r20 = and i32 %r19, 1
ret i32 %r20
}
define void @mcl_fp_shr1_12L(i32* noalias  %r1, i32* noalias  %r2)
{
%r4 = bitcast i32* %r2 to i384*
%r5 = load i384, i384* %r4
%r6 = lshr i384 %r5, 1
%r8 = bitcast i32* %r1 to i384*
store i384 %r6, i384* %r8
ret void
}
define void @mcl_fp_add12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = zext i384 %r7 to i416
%r12 = zext i384 %r10 to i416
%r13 = add i416 %r11, %r12
%r15 = bitcast i32* %r4 to i384*
%r16 = load i384, i384* %r15
%r17 = zext i384 %r16 to i416
%r18 = sub i416 %r13, %r17
%r19 = lshr i416 %r18, 384
%r20 = trunc i416 %r19 to i1
%r21 = select i1 %r20, i416 %r13, i416 %r18
%r22 = trunc i416 %r21 to i384
%r24 = bitcast i32* %r1 to i384*
store i384 %r22, i384* %r24
ret void
}
define void @mcl_fp_addNF12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = add i384 %r7, %r10
%r13 = bitcast i32* %r4 to i384*
%r14 = load i384, i384* %r13
%r15 = sub i384 %r11, %r14
%r16 = lshr i384 %r15, 383
%r17 = trunc i384 %r16 to i1
%r18 = select i1 %r17, i384 %r11, i384 %r15
%r20 = bitcast i32* %r1 to i384*
store i384 %r18, i384* %r20
ret void
}
define void @mcl_fp_sub12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = zext i384 %r7 to i385
%r12 = zext i384 %r10 to i385
%r13 = sub i385 %r11, %r12
%r14 = lshr i385 %r13, 384
%r15 = trunc i385 %r14 to i1
%r16 = trunc i385 %r13 to i384
%r18 = bitcast i32* %r4 to i384*
%r19 = load i384, i384* %r18
%r21 = select i1 %r15, i384 %r19, i384 0
%r22 = add i384 %r16, %r21
%r24 = bitcast i32* %r1 to i384*
store i384 %r22, i384* %r24
ret void
}
define void @mcl_fp_subNF12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i384*
%r7 = load i384, i384* %r6
%r9 = bitcast i32* %r3 to i384*
%r10 = load i384, i384* %r9
%r11 = sub i384 %r7, %r10
%r12 = lshr i384 %r11, 383
%r13 = trunc i384 %r12 to i1
%r15 = bitcast i32* %r4 to i384*
%r16 = load i384, i384* %r15
%r18 = select i1 %r13, i384 %r16, i384 0
%r19 = add i384 %r11, %r18
%r21 = bitcast i32* %r1 to i384*
store i384 %r19, i384* %r21
ret void
}
define void @mcl_fpDbl_add12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i768*
%r7 = load i768, i768* %r6
%r9 = bitcast i32* %r3 to i768*
%r10 = load i768, i768* %r9
%r11 = zext i768 %r7 to i800
%r12 = zext i768 %r10 to i800
%r13 = add i800 %r11, %r12
%r14 = trunc i800 %r13 to i384
%r16 = bitcast i32* %r1 to i384*
store i384 %r14, i384* %r16
%r17 = lshr i800 %r13, 384
%r18 = trunc i800 %r17 to i416
%r20 = bitcast i32* %r4 to i384*
%r21 = load i384, i384* %r20
%r22 = zext i384 %r21 to i416
%r23 = sub i416 %r18, %r22
%r24 = lshr i416 %r23, 384
%r25 = trunc i416 %r24 to i1
%r26 = select i1 %r25, i416 %r18, i416 %r23
%r27 = trunc i416 %r26 to i384
%r29 = getelementptr i32, i32* %r1, i32 12
%r31 = bitcast i32* %r29 to i384*
store i384 %r27, i384* %r31
ret void
}
define void @mcl_fpDbl_sub12L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i768*
%r7 = load i768, i768* %r6
%r9 = bitcast i32* %r3 to i768*
%r10 = load i768, i768* %r9
%r11 = zext i768 %r7 to i800
%r12 = zext i768 %r10 to i800
%r13 = sub i800 %r11, %r12
%r14 = trunc i800 %r13 to i384
%r16 = bitcast i32* %r1 to i384*
store i384 %r14, i384* %r16
%r17 = lshr i800 %r13, 384
%r18 = trunc i800 %r17 to i384
%r19 = lshr i800 %r13, 768
%r20 = trunc i800 %r19 to i1
%r22 = bitcast i32* %r4 to i384*
%r23 = load i384, i384* %r22
%r25 = select i1 %r20, i384 %r23, i384 0
%r26 = add i384 %r18, %r25
%r28 = getelementptr i32, i32* %r1, i32 12
%r30 = bitcast i32* %r28 to i384*
store i384 %r26, i384* %r30
ret void
}
define i544 @mulPv512x32(i32* noalias  %r2, i32 %r3)
{
%r5 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 0)
%r6 = trunc i64 %r5 to i32
%r7 = call i32 @extractHigh32(i64 %r5)
%r9 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 1)
%r10 = trunc i64 %r9 to i32
%r11 = call i32 @extractHigh32(i64 %r9)
%r13 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 2)
%r14 = trunc i64 %r13 to i32
%r15 = call i32 @extractHigh32(i64 %r13)
%r17 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 3)
%r18 = trunc i64 %r17 to i32
%r19 = call i32 @extractHigh32(i64 %r17)
%r21 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 4)
%r22 = trunc i64 %r21 to i32
%r23 = call i32 @extractHigh32(i64 %r21)
%r25 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 5)
%r26 = trunc i64 %r25 to i32
%r27 = call i32 @extractHigh32(i64 %r25)
%r29 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 6)
%r30 = trunc i64 %r29 to i32
%r31 = call i32 @extractHigh32(i64 %r29)
%r33 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 7)
%r34 = trunc i64 %r33 to i32
%r35 = call i32 @extractHigh32(i64 %r33)
%r37 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 8)
%r38 = trunc i64 %r37 to i32
%r39 = call i32 @extractHigh32(i64 %r37)
%r41 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 9)
%r42 = trunc i64 %r41 to i32
%r43 = call i32 @extractHigh32(i64 %r41)
%r45 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 10)
%r46 = trunc i64 %r45 to i32
%r47 = call i32 @extractHigh32(i64 %r45)
%r49 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 11)
%r50 = trunc i64 %r49 to i32
%r51 = call i32 @extractHigh32(i64 %r49)
%r53 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 12)
%r54 = trunc i64 %r53 to i32
%r55 = call i32 @extractHigh32(i64 %r53)
%r57 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 13)
%r58 = trunc i64 %r57 to i32
%r59 = call i32 @extractHigh32(i64 %r57)
%r61 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 14)
%r62 = trunc i64 %r61 to i32
%r63 = call i32 @extractHigh32(i64 %r61)
%r65 = call i64 @mulPos32x32(i32* %r2, i32 %r3, i32 15)
%r66 = trunc i64 %r65 to i32
%r67 = call i32 @extractHigh32(i64 %r65)
%r68 = zext i32 %r6 to i64
%r69 = zext i32 %r10 to i64
%r70 = shl i64 %r69, 32
%r71 = or i64 %r68, %r70
%r72 = zext i64 %r71 to i96
%r73 = zext i32 %r14 to i96
%r74 = shl i96 %r73, 64
%r75 = or i96 %r72, %r74
%r76 = zext i96 %r75 to i128
%r77 = zext i32 %r18 to i128
%r78 = shl i128 %r77, 96
%r79 = or i128 %r76, %r78
%r80 = zext i128 %r79 to i160
%r81 = zext i32 %r22 to i160
%r82 = shl i160 %r81, 128
%r83 = or i160 %r80, %r82
%r84 = zext i160 %r83 to i192
%r85 = zext i32 %r26 to i192
%r86 = shl i192 %r85, 160
%r87 = or i192 %r84, %r86
%r88 = zext i192 %r87 to i224
%r89 = zext i32 %r30 to i224
%r90 = shl i224 %r89, 192
%r91 = or i224 %r88, %r90
%r92 = zext i224 %r91 to i256
%r93 = zext i32 %r34 to i256
%r94 = shl i256 %r93, 224
%r95 = or i256 %r92, %r94
%r96 = zext i256 %r95 to i288
%r97 = zext i32 %r38 to i288
%r98 = shl i288 %r97, 256
%r99 = or i288 %r96, %r98
%r100 = zext i288 %r99 to i320
%r101 = zext i32 %r42 to i320
%r102 = shl i320 %r101, 288
%r103 = or i320 %r100, %r102
%r104 = zext i320 %r103 to i352
%r105 = zext i32 %r46 to i352
%r106 = shl i352 %r105, 320
%r107 = or i352 %r104, %r106
%r108 = zext i352 %r107 to i384
%r109 = zext i32 %r50 to i384
%r110 = shl i384 %r109, 352
%r111 = or i384 %r108, %r110
%r112 = zext i384 %r111 to i416
%r113 = zext i32 %r54 to i416
%r114 = shl i416 %r113, 384
%r115 = or i416 %r112, %r114
%r116 = zext i416 %r115 to i448
%r117 = zext i32 %r58 to i448
%r118 = shl i448 %r117, 416
%r119 = or i448 %r116, %r118
%r120 = zext i448 %r119 to i480
%r121 = zext i32 %r62 to i480
%r122 = shl i480 %r121, 448
%r123 = or i480 %r120, %r122
%r124 = zext i480 %r123 to i512
%r125 = zext i32 %r66 to i512
%r126 = shl i512 %r125, 480
%r127 = or i512 %r124, %r126
%r128 = zext i32 %r7 to i64
%r129 = zext i32 %r11 to i64
%r130 = shl i64 %r129, 32
%r131 = or i64 %r128, %r130
%r132 = zext i64 %r131 to i96
%r133 = zext i32 %r15 to i96
%r134 = shl i96 %r133, 64
%r135 = or i96 %r132, %r134
%r136 = zext i96 %r135 to i128
%r137 = zext i32 %r19 to i128
%r138 = shl i128 %r137, 96
%r139 = or i128 %r136, %r138
%r140 = zext i128 %r139 to i160
%r141 = zext i32 %r23 to i160
%r142 = shl i160 %r141, 128
%r143 = or i160 %r140, %r142
%r144 = zext i160 %r143 to i192
%r145 = zext i32 %r27 to i192
%r146 = shl i192 %r145, 160
%r147 = or i192 %r144, %r146
%r148 = zext i192 %r147 to i224
%r149 = zext i32 %r31 to i224
%r150 = shl i224 %r149, 192
%r151 = or i224 %r148, %r150
%r152 = zext i224 %r151 to i256
%r153 = zext i32 %r35 to i256
%r154 = shl i256 %r153, 224
%r155 = or i256 %r152, %r154
%r156 = zext i256 %r155 to i288
%r157 = zext i32 %r39 to i288
%r158 = shl i288 %r157, 256
%r159 = or i288 %r156, %r158
%r160 = zext i288 %r159 to i320
%r161 = zext i32 %r43 to i320
%r162 = shl i320 %r161, 288
%r163 = or i320 %r160, %r162
%r164 = zext i320 %r163 to i352
%r165 = zext i32 %r47 to i352
%r166 = shl i352 %r165, 320
%r167 = or i352 %r164, %r166
%r168 = zext i352 %r167 to i384
%r169 = zext i32 %r51 to i384
%r170 = shl i384 %r169, 352
%r171 = or i384 %r168, %r170
%r172 = zext i384 %r171 to i416
%r173 = zext i32 %r55 to i416
%r174 = shl i416 %r173, 384
%r175 = or i416 %r172, %r174
%r176 = zext i416 %r175 to i448
%r177 = zext i32 %r59 to i448
%r178 = shl i448 %r177, 416
%r179 = or i448 %r176, %r178
%r180 = zext i448 %r179 to i480
%r181 = zext i32 %r63 to i480
%r182 = shl i480 %r181, 448
%r183 = or i480 %r180, %r182
%r184 = zext i480 %r183 to i512
%r185 = zext i32 %r67 to i512
%r186 = shl i512 %r185, 480
%r187 = or i512 %r184, %r186
%r188 = zext i512 %r127 to i544
%r189 = zext i512 %r187 to i544
%r190 = shl i544 %r189, 32
%r191 = add i544 %r188, %r190
ret i544 %r191
}
define void @mcl_fp_mont16L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r9 = getelementptr i32, i32* %r3, i32 0
%r10 = load i32, i32* %r9
%r11 = call i544 @mulPv512x32(i32* %r2, i32 %r10)
%r12 = zext i544 %r11 to i576
%r13 = trunc i544 %r11 to i32
%r14 = mul i32 %r13, %r7
%r15 = call i544 @mulPv512x32(i32* %r4, i32 %r14)
%r16 = zext i544 %r15 to i576
%r17 = add i576 %r12, %r16
%r18 = lshr i576 %r17, 32
%r20 = getelementptr i32, i32* %r3, i32 1
%r21 = load i32, i32* %r20
%r22 = call i544 @mulPv512x32(i32* %r2, i32 %r21)
%r23 = zext i544 %r22 to i576
%r24 = add i576 %r18, %r23
%r25 = trunc i576 %r24 to i32
%r26 = mul i32 %r25, %r7
%r27 = call i544 @mulPv512x32(i32* %r4, i32 %r26)
%r28 = zext i544 %r27 to i576
%r29 = add i576 %r24, %r28
%r30 = lshr i576 %r29, 32
%r32 = getelementptr i32, i32* %r3, i32 2
%r33 = load i32, i32* %r32
%r34 = call i544 @mulPv512x32(i32* %r2, i32 %r33)
%r35 = zext i544 %r34 to i576
%r36 = add i576 %r30, %r35
%r37 = trunc i576 %r36 to i32
%r38 = mul i32 %r37, %r7
%r39 = call i544 @mulPv512x32(i32* %r4, i32 %r38)
%r40 = zext i544 %r39 to i576
%r41 = add i576 %r36, %r40
%r42 = lshr i576 %r41, 32
%r44 = getelementptr i32, i32* %r3, i32 3
%r45 = load i32, i32* %r44
%r46 = call i544 @mulPv512x32(i32* %r2, i32 %r45)
%r47 = zext i544 %r46 to i576
%r48 = add i576 %r42, %r47
%r49 = trunc i576 %r48 to i32
%r50 = mul i32 %r49, %r7
%r51 = call i544 @mulPv512x32(i32* %r4, i32 %r50)
%r52 = zext i544 %r51 to i576
%r53 = add i576 %r48, %r52
%r54 = lshr i576 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 4
%r57 = load i32, i32* %r56
%r58 = call i544 @mulPv512x32(i32* %r2, i32 %r57)
%r59 = zext i544 %r58 to i576
%r60 = add i576 %r54, %r59
%r61 = trunc i576 %r60 to i32
%r62 = mul i32 %r61, %r7
%r63 = call i544 @mulPv512x32(i32* %r4, i32 %r62)
%r64 = zext i544 %r63 to i576
%r65 = add i576 %r60, %r64
%r66 = lshr i576 %r65, 32
%r68 = getelementptr i32, i32* %r3, i32 5
%r69 = load i32, i32* %r68
%r70 = call i544 @mulPv512x32(i32* %r2, i32 %r69)
%r71 = zext i544 %r70 to i576
%r72 = add i576 %r66, %r71
%r73 = trunc i576 %r72 to i32
%r74 = mul i32 %r73, %r7
%r75 = call i544 @mulPv512x32(i32* %r4, i32 %r74)
%r76 = zext i544 %r75 to i576
%r77 = add i576 %r72, %r76
%r78 = lshr i576 %r77, 32
%r80 = getelementptr i32, i32* %r3, i32 6
%r81 = load i32, i32* %r80
%r82 = call i544 @mulPv512x32(i32* %r2, i32 %r81)
%r83 = zext i544 %r82 to i576
%r84 = add i576 %r78, %r83
%r85 = trunc i576 %r84 to i32
%r86 = mul i32 %r85, %r7
%r87 = call i544 @mulPv512x32(i32* %r4, i32 %r86)
%r88 = zext i544 %r87 to i576
%r89 = add i576 %r84, %r88
%r90 = lshr i576 %r89, 32
%r92 = getelementptr i32, i32* %r3, i32 7
%r93 = load i32, i32* %r92
%r94 = call i544 @mulPv512x32(i32* %r2, i32 %r93)
%r95 = zext i544 %r94 to i576
%r96 = add i576 %r90, %r95
%r97 = trunc i576 %r96 to i32
%r98 = mul i32 %r97, %r7
%r99 = call i544 @mulPv512x32(i32* %r4, i32 %r98)
%r100 = zext i544 %r99 to i576
%r101 = add i576 %r96, %r100
%r102 = lshr i576 %r101, 32
%r104 = getelementptr i32, i32* %r3, i32 8
%r105 = load i32, i32* %r104
%r106 = call i544 @mulPv512x32(i32* %r2, i32 %r105)
%r107 = zext i544 %r106 to i576
%r108 = add i576 %r102, %r107
%r109 = trunc i576 %r108 to i32
%r110 = mul i32 %r109, %r7
%r111 = call i544 @mulPv512x32(i32* %r4, i32 %r110)
%r112 = zext i544 %r111 to i576
%r113 = add i576 %r108, %r112
%r114 = lshr i576 %r113, 32
%r116 = getelementptr i32, i32* %r3, i32 9
%r117 = load i32, i32* %r116
%r118 = call i544 @mulPv512x32(i32* %r2, i32 %r117)
%r119 = zext i544 %r118 to i576
%r120 = add i576 %r114, %r119
%r121 = trunc i576 %r120 to i32
%r122 = mul i32 %r121, %r7
%r123 = call i544 @mulPv512x32(i32* %r4, i32 %r122)
%r124 = zext i544 %r123 to i576
%r125 = add i576 %r120, %r124
%r126 = lshr i576 %r125, 32
%r128 = getelementptr i32, i32* %r3, i32 10
%r129 = load i32, i32* %r128
%r130 = call i544 @mulPv512x32(i32* %r2, i32 %r129)
%r131 = zext i544 %r130 to i576
%r132 = add i576 %r126, %r131
%r133 = trunc i576 %r132 to i32
%r134 = mul i32 %r133, %r7
%r135 = call i544 @mulPv512x32(i32* %r4, i32 %r134)
%r136 = zext i544 %r135 to i576
%r137 = add i576 %r132, %r136
%r138 = lshr i576 %r137, 32
%r140 = getelementptr i32, i32* %r3, i32 11
%r141 = load i32, i32* %r140
%r142 = call i544 @mulPv512x32(i32* %r2, i32 %r141)
%r143 = zext i544 %r142 to i576
%r144 = add i576 %r138, %r143
%r145 = trunc i576 %r144 to i32
%r146 = mul i32 %r145, %r7
%r147 = call i544 @mulPv512x32(i32* %r4, i32 %r146)
%r148 = zext i544 %r147 to i576
%r149 = add i576 %r144, %r148
%r150 = lshr i576 %r149, 32
%r152 = getelementptr i32, i32* %r3, i32 12
%r153 = load i32, i32* %r152
%r154 = call i544 @mulPv512x32(i32* %r2, i32 %r153)
%r155 = zext i544 %r154 to i576
%r156 = add i576 %r150, %r155
%r157 = trunc i576 %r156 to i32
%r158 = mul i32 %r157, %r7
%r159 = call i544 @mulPv512x32(i32* %r4, i32 %r158)
%r160 = zext i544 %r159 to i576
%r161 = add i576 %r156, %r160
%r162 = lshr i576 %r161, 32
%r164 = getelementptr i32, i32* %r3, i32 13
%r165 = load i32, i32* %r164
%r166 = call i544 @mulPv512x32(i32* %r2, i32 %r165)
%r167 = zext i544 %r166 to i576
%r168 = add i576 %r162, %r167
%r169 = trunc i576 %r168 to i32
%r170 = mul i32 %r169, %r7
%r171 = call i544 @mulPv512x32(i32* %r4, i32 %r170)
%r172 = zext i544 %r171 to i576
%r173 = add i576 %r168, %r172
%r174 = lshr i576 %r173, 32
%r176 = getelementptr i32, i32* %r3, i32 14
%r177 = load i32, i32* %r176
%r178 = call i544 @mulPv512x32(i32* %r2, i32 %r177)
%r179 = zext i544 %r178 to i576
%r180 = add i576 %r174, %r179
%r181 = trunc i576 %r180 to i32
%r182 = mul i32 %r181, %r7
%r183 = call i544 @mulPv512x32(i32* %r4, i32 %r182)
%r184 = zext i544 %r183 to i576
%r185 = add i576 %r180, %r184
%r186 = lshr i576 %r185, 32
%r188 = getelementptr i32, i32* %r3, i32 15
%r189 = load i32, i32* %r188
%r190 = call i544 @mulPv512x32(i32* %r2, i32 %r189)
%r191 = zext i544 %r190 to i576
%r192 = add i576 %r186, %r191
%r193 = trunc i576 %r192 to i32
%r194 = mul i32 %r193, %r7
%r195 = call i544 @mulPv512x32(i32* %r4, i32 %r194)
%r196 = zext i544 %r195 to i576
%r197 = add i576 %r192, %r196
%r198 = lshr i576 %r197, 32
%r199 = trunc i576 %r198 to i544
%r201 = bitcast i32* %r4 to i512*
%r202 = load i512, i512* %r201
%r203 = zext i512 %r202 to i544
%r204 = sub i544 %r199, %r203
%r205 = lshr i544 %r204, 512
%r206 = trunc i544 %r205 to i1
%r207 = select i1 %r206, i544 %r199, i544 %r204
%r208 = trunc i544 %r207 to i512
%r210 = bitcast i32* %r1 to i512*
store i512 %r208, i512* %r210
ret void
}
define void @mcl_fp_montNF16L(i32* %r1, i32* %r2, i32* %r3, i32* %r4)
{
%r6 = getelementptr i32, i32* %r4, i32 -1
%r7 = load i32, i32* %r6
%r8 = load i32, i32* %r3
%r9 = call i544 @mulPv512x32(i32* %r2, i32 %r8)
%r10 = trunc i544 %r9 to i32
%r11 = mul i32 %r10, %r7
%r12 = call i544 @mulPv512x32(i32* %r4, i32 %r11)
%r13 = add i544 %r9, %r12
%r14 = lshr i544 %r13, 32
%r16 = getelementptr i32, i32* %r3, i32 1
%r17 = load i32, i32* %r16
%r18 = call i544 @mulPv512x32(i32* %r2, i32 %r17)
%r19 = add i544 %r14, %r18
%r20 = trunc i544 %r19 to i32
%r21 = mul i32 %r20, %r7
%r22 = call i544 @mulPv512x32(i32* %r4, i32 %r21)
%r23 = add i544 %r19, %r22
%r24 = lshr i544 %r23, 32
%r26 = getelementptr i32, i32* %r3, i32 2
%r27 = load i32, i32* %r26
%r28 = call i544 @mulPv512x32(i32* %r2, i32 %r27)
%r29 = add i544 %r24, %r28
%r30 = trunc i544 %r29 to i32
%r31 = mul i32 %r30, %r7
%r32 = call i544 @mulPv512x32(i32* %r4, i32 %r31)
%r33 = add i544 %r29, %r32
%r34 = lshr i544 %r33, 32
%r36 = getelementptr i32, i32* %r3, i32 3
%r37 = load i32, i32* %r36
%r38 = call i544 @mulPv512x32(i32* %r2, i32 %r37)
%r39 = add i544 %r34, %r38
%r40 = trunc i544 %r39 to i32
%r41 = mul i32 %r40, %r7
%r42 = call i544 @mulPv512x32(i32* %r4, i32 %r41)
%r43 = add i544 %r39, %r42
%r44 = lshr i544 %r43, 32
%r46 = getelementptr i32, i32* %r3, i32 4
%r47 = load i32, i32* %r46
%r48 = call i544 @mulPv512x32(i32* %r2, i32 %r47)
%r49 = add i544 %r44, %r48
%r50 = trunc i544 %r49 to i32
%r51 = mul i32 %r50, %r7
%r52 = call i544 @mulPv512x32(i32* %r4, i32 %r51)
%r53 = add i544 %r49, %r52
%r54 = lshr i544 %r53, 32
%r56 = getelementptr i32, i32* %r3, i32 5
%r57 = load i32, i32* %r56
%r58 = call i544 @mulPv512x32(i32* %r2, i32 %r57)
%r59 = add i544 %r54, %r58
%r60 = trunc i544 %r59 to i32
%r61 = mul i32 %r60, %r7
%r62 = call i544 @mulPv512x32(i32* %r4, i32 %r61)
%r63 = add i544 %r59, %r62
%r64 = lshr i544 %r63, 32
%r66 = getelementptr i32, i32* %r3, i32 6
%r67 = load i32, i32* %r66
%r68 = call i544 @mulPv512x32(i32* %r2, i32 %r67)
%r69 = add i544 %r64, %r68
%r70 = trunc i544 %r69 to i32
%r71 = mul i32 %r70, %r7
%r72 = call i544 @mulPv512x32(i32* %r4, i32 %r71)
%r73 = add i544 %r69, %r72
%r74 = lshr i544 %r73, 32
%r76 = getelementptr i32, i32* %r3, i32 7
%r77 = load i32, i32* %r76
%r78 = call i544 @mulPv512x32(i32* %r2, i32 %r77)
%r79 = add i544 %r74, %r78
%r80 = trunc i544 %r79 to i32
%r81 = mul i32 %r80, %r7
%r82 = call i544 @mulPv512x32(i32* %r4, i32 %r81)
%r83 = add i544 %r79, %r82
%r84 = lshr i544 %r83, 32
%r86 = getelementptr i32, i32* %r3, i32 8
%r87 = load i32, i32* %r86
%r88 = call i544 @mulPv512x32(i32* %r2, i32 %r87)
%r89 = add i544 %r84, %r88
%r90 = trunc i544 %r89 to i32
%r91 = mul i32 %r90, %r7
%r92 = call i544 @mulPv512x32(i32* %r4, i32 %r91)
%r93 = add i544 %r89, %r92
%r94 = lshr i544 %r93, 32
%r96 = getelementptr i32, i32* %r3, i32 9
%r97 = load i32, i32* %r96
%r98 = call i544 @mulPv512x32(i32* %r2, i32 %r97)
%r99 = add i544 %r94, %r98
%r100 = trunc i544 %r99 to i32
%r101 = mul i32 %r100, %r7
%r102 = call i544 @mulPv512x32(i32* %r4, i32 %r101)
%r103 = add i544 %r99, %r102
%r104 = lshr i544 %r103, 32
%r106 = getelementptr i32, i32* %r3, i32 10
%r107 = load i32, i32* %r106
%r108 = call i544 @mulPv512x32(i32* %r2, i32 %r107)
%r109 = add i544 %r104, %r108
%r110 = trunc i544 %r109 to i32
%r111 = mul i32 %r110, %r7
%r112 = call i544 @mulPv512x32(i32* %r4, i32 %r111)
%r113 = add i544 %r109, %r112
%r114 = lshr i544 %r113, 32
%r116 = getelementptr i32, i32* %r3, i32 11
%r117 = load i32, i32* %r116
%r118 = call i544 @mulPv512x32(i32* %r2, i32 %r117)
%r119 = add i544 %r114, %r118
%r120 = trunc i544 %r119 to i32
%r121 = mul i32 %r120, %r7
%r122 = call i544 @mulPv512x32(i32* %r4, i32 %r121)
%r123 = add i544 %r119, %r122
%r124 = lshr i544 %r123, 32
%r126 = getelementptr i32, i32* %r3, i32 12
%r127 = load i32, i32* %r126
%r128 = call i544 @mulPv512x32(i32* %r2, i32 %r127)
%r129 = add i544 %r124, %r128
%r130 = trunc i544 %r129 to i32
%r131 = mul i32 %r130, %r7
%r132 = call i544 @mulPv512x32(i32* %r4, i32 %r131)
%r133 = add i544 %r129, %r132
%r134 = lshr i544 %r133, 32
%r136 = getelementptr i32, i32* %r3, i32 13
%r137 = load i32, i32* %r136
%r138 = call i544 @mulPv512x32(i32* %r2, i32 %r137)
%r139 = add i544 %r134, %r138
%r140 = trunc i544 %r139 to i32
%r141 = mul i32 %r140, %r7
%r142 = call i544 @mulPv512x32(i32* %r4, i32 %r141)
%r143 = add i544 %r139, %r142
%r144 = lshr i544 %r143, 32
%r146 = getelementptr i32, i32* %r3, i32 14
%r147 = load i32, i32* %r146
%r148 = call i544 @mulPv512x32(i32* %r2, i32 %r147)
%r149 = add i544 %r144, %r148
%r150 = trunc i544 %r149 to i32
%r151 = mul i32 %r150, %r7
%r152 = call i544 @mulPv512x32(i32* %r4, i32 %r151)
%r153 = add i544 %r149, %r152
%r154 = lshr i544 %r153, 32
%r156 = getelementptr i32, i32* %r3, i32 15
%r157 = load i32, i32* %r156
%r158 = call i544 @mulPv512x32(i32* %r2, i32 %r157)
%r159 = add i544 %r154, %r158
%r160 = trunc i544 %r159 to i32
%r161 = mul i32 %r160, %r7
%r162 = call i544 @mulPv512x32(i32* %r4, i32 %r161)
%r163 = add i544 %r159, %r162
%r164 = lshr i544 %r163, 32
%r165 = trunc i544 %r164 to i512
%r167 = bitcast i32* %r4 to i512*
%r168 = load i512, i512* %r167
%r169 = sub i512 %r165, %r168
%r170 = lshr i512 %r169, 511
%r171 = trunc i512 %r170 to i1
%r172 = select i1 %r171, i512 %r165, i512 %r169
%r174 = bitcast i32* %r1 to i512*
store i512 %r172, i512* %r174
ret void
}
define void @mcl_fp_montRed16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i512*
%r9 = load i512, i512* %r8
%r11 = bitcast i32* %r2 to i512*
%r12 = load i512, i512* %r11
%r13 = trunc i512 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i544 @mulPv512x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 16
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i544
%r20 = shl i544 %r19, 512
%r21 = zext i512 %r12 to i544
%r22 = or i544 %r20, %r21
%r23 = zext i544 %r22 to i576
%r24 = zext i544 %r15 to i576
%r25 = add i576 %r23, %r24
%r26 = lshr i576 %r25, 32
%r27 = trunc i576 %r26 to i544
%r28 = lshr i544 %r27, 512
%r29 = trunc i544 %r28 to i32
%r30 = trunc i544 %r27 to i512
%r31 = trunc i512 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i544 @mulPv512x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i544
%r35 = shl i544 %r34, 512
%r36 = add i544 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 17
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i544
%r41 = shl i544 %r40, 512
%r42 = zext i512 %r30 to i544
%r43 = or i544 %r41, %r42
%r44 = zext i544 %r43 to i576
%r45 = zext i544 %r36 to i576
%r46 = add i576 %r44, %r45
%r47 = lshr i576 %r46, 32
%r48 = trunc i576 %r47 to i544
%r49 = lshr i544 %r48, 512
%r50 = trunc i544 %r49 to i32
%r51 = trunc i544 %r48 to i512
%r52 = trunc i512 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i544 @mulPv512x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i544
%r56 = shl i544 %r55, 512
%r57 = add i544 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 18
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i544
%r62 = shl i544 %r61, 512
%r63 = zext i512 %r51 to i544
%r64 = or i544 %r62, %r63
%r65 = zext i544 %r64 to i576
%r66 = zext i544 %r57 to i576
%r67 = add i576 %r65, %r66
%r68 = lshr i576 %r67, 32
%r69 = trunc i576 %r68 to i544
%r70 = lshr i544 %r69, 512
%r71 = trunc i544 %r70 to i32
%r72 = trunc i544 %r69 to i512
%r73 = trunc i512 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i544 @mulPv512x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i544
%r77 = shl i544 %r76, 512
%r78 = add i544 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 19
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i544
%r83 = shl i544 %r82, 512
%r84 = zext i512 %r72 to i544
%r85 = or i544 %r83, %r84
%r86 = zext i544 %r85 to i576
%r87 = zext i544 %r78 to i576
%r88 = add i576 %r86, %r87
%r89 = lshr i576 %r88, 32
%r90 = trunc i576 %r89 to i544
%r91 = lshr i544 %r90, 512
%r92 = trunc i544 %r91 to i32
%r93 = trunc i544 %r90 to i512
%r94 = trunc i512 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i544 @mulPv512x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i544
%r98 = shl i544 %r97, 512
%r99 = add i544 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 20
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i544
%r104 = shl i544 %r103, 512
%r105 = zext i512 %r93 to i544
%r106 = or i544 %r104, %r105
%r107 = zext i544 %r106 to i576
%r108 = zext i544 %r99 to i576
%r109 = add i576 %r107, %r108
%r110 = lshr i576 %r109, 32
%r111 = trunc i576 %r110 to i544
%r112 = lshr i544 %r111, 512
%r113 = trunc i544 %r112 to i32
%r114 = trunc i544 %r111 to i512
%r115 = trunc i512 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i544 @mulPv512x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i544
%r119 = shl i544 %r118, 512
%r120 = add i544 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 21
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i544
%r125 = shl i544 %r124, 512
%r126 = zext i512 %r114 to i544
%r127 = or i544 %r125, %r126
%r128 = zext i544 %r127 to i576
%r129 = zext i544 %r120 to i576
%r130 = add i576 %r128, %r129
%r131 = lshr i576 %r130, 32
%r132 = trunc i576 %r131 to i544
%r133 = lshr i544 %r132, 512
%r134 = trunc i544 %r133 to i32
%r135 = trunc i544 %r132 to i512
%r136 = trunc i512 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i544 @mulPv512x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i544
%r140 = shl i544 %r139, 512
%r141 = add i544 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 22
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i544
%r146 = shl i544 %r145, 512
%r147 = zext i512 %r135 to i544
%r148 = or i544 %r146, %r147
%r149 = zext i544 %r148 to i576
%r150 = zext i544 %r141 to i576
%r151 = add i576 %r149, %r150
%r152 = lshr i576 %r151, 32
%r153 = trunc i576 %r152 to i544
%r154 = lshr i544 %r153, 512
%r155 = trunc i544 %r154 to i32
%r156 = trunc i544 %r153 to i512
%r157 = trunc i512 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i544 @mulPv512x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i544
%r161 = shl i544 %r160, 512
%r162 = add i544 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 23
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i544
%r167 = shl i544 %r166, 512
%r168 = zext i512 %r156 to i544
%r169 = or i544 %r167, %r168
%r170 = zext i544 %r169 to i576
%r171 = zext i544 %r162 to i576
%r172 = add i576 %r170, %r171
%r173 = lshr i576 %r172, 32
%r174 = trunc i576 %r173 to i544
%r175 = lshr i544 %r174, 512
%r176 = trunc i544 %r175 to i32
%r177 = trunc i544 %r174 to i512
%r178 = trunc i512 %r177 to i32
%r179 = mul i32 %r178, %r6
%r180 = call i544 @mulPv512x32(i32* %r3, i32 %r179)
%r181 = zext i32 %r176 to i544
%r182 = shl i544 %r181, 512
%r183 = add i544 %r180, %r182
%r185 = getelementptr i32, i32* %r2, i32 24
%r186 = load i32, i32* %r185
%r187 = zext i32 %r186 to i544
%r188 = shl i544 %r187, 512
%r189 = zext i512 %r177 to i544
%r190 = or i544 %r188, %r189
%r191 = zext i544 %r190 to i576
%r192 = zext i544 %r183 to i576
%r193 = add i576 %r191, %r192
%r194 = lshr i576 %r193, 32
%r195 = trunc i576 %r194 to i544
%r196 = lshr i544 %r195, 512
%r197 = trunc i544 %r196 to i32
%r198 = trunc i544 %r195 to i512
%r199 = trunc i512 %r198 to i32
%r200 = mul i32 %r199, %r6
%r201 = call i544 @mulPv512x32(i32* %r3, i32 %r200)
%r202 = zext i32 %r197 to i544
%r203 = shl i544 %r202, 512
%r204 = add i544 %r201, %r203
%r206 = getelementptr i32, i32* %r2, i32 25
%r207 = load i32, i32* %r206
%r208 = zext i32 %r207 to i544
%r209 = shl i544 %r208, 512
%r210 = zext i512 %r198 to i544
%r211 = or i544 %r209, %r210
%r212 = zext i544 %r211 to i576
%r213 = zext i544 %r204 to i576
%r214 = add i576 %r212, %r213
%r215 = lshr i576 %r214, 32
%r216 = trunc i576 %r215 to i544
%r217 = lshr i544 %r216, 512
%r218 = trunc i544 %r217 to i32
%r219 = trunc i544 %r216 to i512
%r220 = trunc i512 %r219 to i32
%r221 = mul i32 %r220, %r6
%r222 = call i544 @mulPv512x32(i32* %r3, i32 %r221)
%r223 = zext i32 %r218 to i544
%r224 = shl i544 %r223, 512
%r225 = add i544 %r222, %r224
%r227 = getelementptr i32, i32* %r2, i32 26
%r228 = load i32, i32* %r227
%r229 = zext i32 %r228 to i544
%r230 = shl i544 %r229, 512
%r231 = zext i512 %r219 to i544
%r232 = or i544 %r230, %r231
%r233 = zext i544 %r232 to i576
%r234 = zext i544 %r225 to i576
%r235 = add i576 %r233, %r234
%r236 = lshr i576 %r235, 32
%r237 = trunc i576 %r236 to i544
%r238 = lshr i544 %r237, 512
%r239 = trunc i544 %r238 to i32
%r240 = trunc i544 %r237 to i512
%r241 = trunc i512 %r240 to i32
%r242 = mul i32 %r241, %r6
%r243 = call i544 @mulPv512x32(i32* %r3, i32 %r242)
%r244 = zext i32 %r239 to i544
%r245 = shl i544 %r244, 512
%r246 = add i544 %r243, %r245
%r248 = getelementptr i32, i32* %r2, i32 27
%r249 = load i32, i32* %r248
%r250 = zext i32 %r249 to i544
%r251 = shl i544 %r250, 512
%r252 = zext i512 %r240 to i544
%r253 = or i544 %r251, %r252
%r254 = zext i544 %r253 to i576
%r255 = zext i544 %r246 to i576
%r256 = add i576 %r254, %r255
%r257 = lshr i576 %r256, 32
%r258 = trunc i576 %r257 to i544
%r259 = lshr i544 %r258, 512
%r260 = trunc i544 %r259 to i32
%r261 = trunc i544 %r258 to i512
%r262 = trunc i512 %r261 to i32
%r263 = mul i32 %r262, %r6
%r264 = call i544 @mulPv512x32(i32* %r3, i32 %r263)
%r265 = zext i32 %r260 to i544
%r266 = shl i544 %r265, 512
%r267 = add i544 %r264, %r266
%r269 = getelementptr i32, i32* %r2, i32 28
%r270 = load i32, i32* %r269
%r271 = zext i32 %r270 to i544
%r272 = shl i544 %r271, 512
%r273 = zext i512 %r261 to i544
%r274 = or i544 %r272, %r273
%r275 = zext i544 %r274 to i576
%r276 = zext i544 %r267 to i576
%r277 = add i576 %r275, %r276
%r278 = lshr i576 %r277, 32
%r279 = trunc i576 %r278 to i544
%r280 = lshr i544 %r279, 512
%r281 = trunc i544 %r280 to i32
%r282 = trunc i544 %r279 to i512
%r283 = trunc i512 %r282 to i32
%r284 = mul i32 %r283, %r6
%r285 = call i544 @mulPv512x32(i32* %r3, i32 %r284)
%r286 = zext i32 %r281 to i544
%r287 = shl i544 %r286, 512
%r288 = add i544 %r285, %r287
%r290 = getelementptr i32, i32* %r2, i32 29
%r291 = load i32, i32* %r290
%r292 = zext i32 %r291 to i544
%r293 = shl i544 %r292, 512
%r294 = zext i512 %r282 to i544
%r295 = or i544 %r293, %r294
%r296 = zext i544 %r295 to i576
%r297 = zext i544 %r288 to i576
%r298 = add i576 %r296, %r297
%r299 = lshr i576 %r298, 32
%r300 = trunc i576 %r299 to i544
%r301 = lshr i544 %r300, 512
%r302 = trunc i544 %r301 to i32
%r303 = trunc i544 %r300 to i512
%r304 = trunc i512 %r303 to i32
%r305 = mul i32 %r304, %r6
%r306 = call i544 @mulPv512x32(i32* %r3, i32 %r305)
%r307 = zext i32 %r302 to i544
%r308 = shl i544 %r307, 512
%r309 = add i544 %r306, %r308
%r311 = getelementptr i32, i32* %r2, i32 30
%r312 = load i32, i32* %r311
%r313 = zext i32 %r312 to i544
%r314 = shl i544 %r313, 512
%r315 = zext i512 %r303 to i544
%r316 = or i544 %r314, %r315
%r317 = zext i544 %r316 to i576
%r318 = zext i544 %r309 to i576
%r319 = add i576 %r317, %r318
%r320 = lshr i576 %r319, 32
%r321 = trunc i576 %r320 to i544
%r322 = lshr i544 %r321, 512
%r323 = trunc i544 %r322 to i32
%r324 = trunc i544 %r321 to i512
%r325 = trunc i512 %r324 to i32
%r326 = mul i32 %r325, %r6
%r327 = call i544 @mulPv512x32(i32* %r3, i32 %r326)
%r328 = zext i32 %r323 to i544
%r329 = shl i544 %r328, 512
%r330 = add i544 %r327, %r329
%r332 = getelementptr i32, i32* %r2, i32 31
%r333 = load i32, i32* %r332
%r334 = zext i32 %r333 to i544
%r335 = shl i544 %r334, 512
%r336 = zext i512 %r324 to i544
%r337 = or i544 %r335, %r336
%r338 = zext i544 %r337 to i576
%r339 = zext i544 %r330 to i576
%r340 = add i576 %r338, %r339
%r341 = lshr i576 %r340, 32
%r342 = trunc i576 %r341 to i544
%r343 = lshr i544 %r342, 512
%r344 = trunc i544 %r343 to i32
%r345 = trunc i544 %r342 to i512
%r346 = zext i512 %r9 to i544
%r347 = zext i32 %r344 to i544
%r348 = shl i544 %r347, 512
%r349 = zext i512 %r345 to i544
%r350 = or i544 %r348, %r349
%r351 = sub i544 %r350, %r346
%r352 = lshr i544 %r351, 512
%r353 = trunc i544 %r352 to i1
%r354 = select i1 %r353, i544 %r350, i544 %r351
%r355 = trunc i544 %r354 to i512
%r357 = bitcast i32* %r1 to i512*
store i512 %r355, i512* %r357
ret void
}
define void @mcl_fp_montRedNF16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3)
{
%r5 = getelementptr i32, i32* %r3, i32 -1
%r6 = load i32, i32* %r5
%r8 = bitcast i32* %r3 to i512*
%r9 = load i512, i512* %r8
%r11 = bitcast i32* %r2 to i512*
%r12 = load i512, i512* %r11
%r13 = trunc i512 %r12 to i32
%r14 = mul i32 %r13, %r6
%r15 = call i544 @mulPv512x32(i32* %r3, i32 %r14)
%r17 = getelementptr i32, i32* %r2, i32 16
%r18 = load i32, i32* %r17
%r19 = zext i32 %r18 to i544
%r20 = shl i544 %r19, 512
%r21 = zext i512 %r12 to i544
%r22 = or i544 %r20, %r21
%r23 = zext i544 %r22 to i576
%r24 = zext i544 %r15 to i576
%r25 = add i576 %r23, %r24
%r26 = lshr i576 %r25, 32
%r27 = trunc i576 %r26 to i544
%r28 = lshr i544 %r27, 512
%r29 = trunc i544 %r28 to i32
%r30 = trunc i544 %r27 to i512
%r31 = trunc i512 %r30 to i32
%r32 = mul i32 %r31, %r6
%r33 = call i544 @mulPv512x32(i32* %r3, i32 %r32)
%r34 = zext i32 %r29 to i544
%r35 = shl i544 %r34, 512
%r36 = add i544 %r33, %r35
%r38 = getelementptr i32, i32* %r2, i32 17
%r39 = load i32, i32* %r38
%r40 = zext i32 %r39 to i544
%r41 = shl i544 %r40, 512
%r42 = zext i512 %r30 to i544
%r43 = or i544 %r41, %r42
%r44 = zext i544 %r43 to i576
%r45 = zext i544 %r36 to i576
%r46 = add i576 %r44, %r45
%r47 = lshr i576 %r46, 32
%r48 = trunc i576 %r47 to i544
%r49 = lshr i544 %r48, 512
%r50 = trunc i544 %r49 to i32
%r51 = trunc i544 %r48 to i512
%r52 = trunc i512 %r51 to i32
%r53 = mul i32 %r52, %r6
%r54 = call i544 @mulPv512x32(i32* %r3, i32 %r53)
%r55 = zext i32 %r50 to i544
%r56 = shl i544 %r55, 512
%r57 = add i544 %r54, %r56
%r59 = getelementptr i32, i32* %r2, i32 18
%r60 = load i32, i32* %r59
%r61 = zext i32 %r60 to i544
%r62 = shl i544 %r61, 512
%r63 = zext i512 %r51 to i544
%r64 = or i544 %r62, %r63
%r65 = zext i544 %r64 to i576
%r66 = zext i544 %r57 to i576
%r67 = add i576 %r65, %r66
%r68 = lshr i576 %r67, 32
%r69 = trunc i576 %r68 to i544
%r70 = lshr i544 %r69, 512
%r71 = trunc i544 %r70 to i32
%r72 = trunc i544 %r69 to i512
%r73 = trunc i512 %r72 to i32
%r74 = mul i32 %r73, %r6
%r75 = call i544 @mulPv512x32(i32* %r3, i32 %r74)
%r76 = zext i32 %r71 to i544
%r77 = shl i544 %r76, 512
%r78 = add i544 %r75, %r77
%r80 = getelementptr i32, i32* %r2, i32 19
%r81 = load i32, i32* %r80
%r82 = zext i32 %r81 to i544
%r83 = shl i544 %r82, 512
%r84 = zext i512 %r72 to i544
%r85 = or i544 %r83, %r84
%r86 = zext i544 %r85 to i576
%r87 = zext i544 %r78 to i576
%r88 = add i576 %r86, %r87
%r89 = lshr i576 %r88, 32
%r90 = trunc i576 %r89 to i544
%r91 = lshr i544 %r90, 512
%r92 = trunc i544 %r91 to i32
%r93 = trunc i544 %r90 to i512
%r94 = trunc i512 %r93 to i32
%r95 = mul i32 %r94, %r6
%r96 = call i544 @mulPv512x32(i32* %r3, i32 %r95)
%r97 = zext i32 %r92 to i544
%r98 = shl i544 %r97, 512
%r99 = add i544 %r96, %r98
%r101 = getelementptr i32, i32* %r2, i32 20
%r102 = load i32, i32* %r101
%r103 = zext i32 %r102 to i544
%r104 = shl i544 %r103, 512
%r105 = zext i512 %r93 to i544
%r106 = or i544 %r104, %r105
%r107 = zext i544 %r106 to i576
%r108 = zext i544 %r99 to i576
%r109 = add i576 %r107, %r108
%r110 = lshr i576 %r109, 32
%r111 = trunc i576 %r110 to i544
%r112 = lshr i544 %r111, 512
%r113 = trunc i544 %r112 to i32
%r114 = trunc i544 %r111 to i512
%r115 = trunc i512 %r114 to i32
%r116 = mul i32 %r115, %r6
%r117 = call i544 @mulPv512x32(i32* %r3, i32 %r116)
%r118 = zext i32 %r113 to i544
%r119 = shl i544 %r118, 512
%r120 = add i544 %r117, %r119
%r122 = getelementptr i32, i32* %r2, i32 21
%r123 = load i32, i32* %r122
%r124 = zext i32 %r123 to i544
%r125 = shl i544 %r124, 512
%r126 = zext i512 %r114 to i544
%r127 = or i544 %r125, %r126
%r128 = zext i544 %r127 to i576
%r129 = zext i544 %r120 to i576
%r130 = add i576 %r128, %r129
%r131 = lshr i576 %r130, 32
%r132 = trunc i576 %r131 to i544
%r133 = lshr i544 %r132, 512
%r134 = trunc i544 %r133 to i32
%r135 = trunc i544 %r132 to i512
%r136 = trunc i512 %r135 to i32
%r137 = mul i32 %r136, %r6
%r138 = call i544 @mulPv512x32(i32* %r3, i32 %r137)
%r139 = zext i32 %r134 to i544
%r140 = shl i544 %r139, 512
%r141 = add i544 %r138, %r140
%r143 = getelementptr i32, i32* %r2, i32 22
%r144 = load i32, i32* %r143
%r145 = zext i32 %r144 to i544
%r146 = shl i544 %r145, 512
%r147 = zext i512 %r135 to i544
%r148 = or i544 %r146, %r147
%r149 = zext i544 %r148 to i576
%r150 = zext i544 %r141 to i576
%r151 = add i576 %r149, %r150
%r152 = lshr i576 %r151, 32
%r153 = trunc i576 %r152 to i544
%r154 = lshr i544 %r153, 512
%r155 = trunc i544 %r154 to i32
%r156 = trunc i544 %r153 to i512
%r157 = trunc i512 %r156 to i32
%r158 = mul i32 %r157, %r6
%r159 = call i544 @mulPv512x32(i32* %r3, i32 %r158)
%r160 = zext i32 %r155 to i544
%r161 = shl i544 %r160, 512
%r162 = add i544 %r159, %r161
%r164 = getelementptr i32, i32* %r2, i32 23
%r165 = load i32, i32* %r164
%r166 = zext i32 %r165 to i544
%r167 = shl i544 %r166, 512
%r168 = zext i512 %r156 to i544
%r169 = or i544 %r167, %r168
%r170 = zext i544 %r169 to i576
%r171 = zext i544 %r162 to i576
%r172 = add i576 %r170, %r171
%r173 = lshr i576 %r172, 32
%r174 = trunc i576 %r173 to i544
%r175 = lshr i544 %r174, 512
%r176 = trunc i544 %r175 to i32
%r177 = trunc i544 %r174 to i512
%r178 = trunc i512 %r177 to i32
%r179 = mul i32 %r178, %r6
%r180 = call i544 @mulPv512x32(i32* %r3, i32 %r179)
%r181 = zext i32 %r176 to i544
%r182 = shl i544 %r181, 512
%r183 = add i544 %r180, %r182
%r185 = getelementptr i32, i32* %r2, i32 24
%r186 = load i32, i32* %r185
%r187 = zext i32 %r186 to i544
%r188 = shl i544 %r187, 512
%r189 = zext i512 %r177 to i544
%r190 = or i544 %r188, %r189
%r191 = zext i544 %r190 to i576
%r192 = zext i544 %r183 to i576
%r193 = add i576 %r191, %r192
%r194 = lshr i576 %r193, 32
%r195 = trunc i576 %r194 to i544
%r196 = lshr i544 %r195, 512
%r197 = trunc i544 %r196 to i32
%r198 = trunc i544 %r195 to i512
%r199 = trunc i512 %r198 to i32
%r200 = mul i32 %r199, %r6
%r201 = call i544 @mulPv512x32(i32* %r3, i32 %r200)
%r202 = zext i32 %r197 to i544
%r203 = shl i544 %r202, 512
%r204 = add i544 %r201, %r203
%r206 = getelementptr i32, i32* %r2, i32 25
%r207 = load i32, i32* %r206
%r208 = zext i32 %r207 to i544
%r209 = shl i544 %r208, 512
%r210 = zext i512 %r198 to i544
%r211 = or i544 %r209, %r210
%r212 = zext i544 %r211 to i576
%r213 = zext i544 %r204 to i576
%r214 = add i576 %r212, %r213
%r215 = lshr i576 %r214, 32
%r216 = trunc i576 %r215 to i544
%r217 = lshr i544 %r216, 512
%r218 = trunc i544 %r217 to i32
%r219 = trunc i544 %r216 to i512
%r220 = trunc i512 %r219 to i32
%r221 = mul i32 %r220, %r6
%r222 = call i544 @mulPv512x32(i32* %r3, i32 %r221)
%r223 = zext i32 %r218 to i544
%r224 = shl i544 %r223, 512
%r225 = add i544 %r222, %r224
%r227 = getelementptr i32, i32* %r2, i32 26
%r228 = load i32, i32* %r227
%r229 = zext i32 %r228 to i544
%r230 = shl i544 %r229, 512
%r231 = zext i512 %r219 to i544
%r232 = or i544 %r230, %r231
%r233 = zext i544 %r232 to i576
%r234 = zext i544 %r225 to i576
%r235 = add i576 %r233, %r234
%r236 = lshr i576 %r235, 32
%r237 = trunc i576 %r236 to i544
%r238 = lshr i544 %r237, 512
%r239 = trunc i544 %r238 to i32
%r240 = trunc i544 %r237 to i512
%r241 = trunc i512 %r240 to i32
%r242 = mul i32 %r241, %r6
%r243 = call i544 @mulPv512x32(i32* %r3, i32 %r242)
%r244 = zext i32 %r239 to i544
%r245 = shl i544 %r244, 512
%r246 = add i544 %r243, %r245
%r248 = getelementptr i32, i32* %r2, i32 27
%r249 = load i32, i32* %r248
%r250 = zext i32 %r249 to i544
%r251 = shl i544 %r250, 512
%r252 = zext i512 %r240 to i544
%r253 = or i544 %r251, %r252
%r254 = zext i544 %r253 to i576
%r255 = zext i544 %r246 to i576
%r256 = add i576 %r254, %r255
%r257 = lshr i576 %r256, 32
%r258 = trunc i576 %r257 to i544
%r259 = lshr i544 %r258, 512
%r260 = trunc i544 %r259 to i32
%r261 = trunc i544 %r258 to i512
%r262 = trunc i512 %r261 to i32
%r263 = mul i32 %r262, %r6
%r264 = call i544 @mulPv512x32(i32* %r3, i32 %r263)
%r265 = zext i32 %r260 to i544
%r266 = shl i544 %r265, 512
%r267 = add i544 %r264, %r266
%r269 = getelementptr i32, i32* %r2, i32 28
%r270 = load i32, i32* %r269
%r271 = zext i32 %r270 to i544
%r272 = shl i544 %r271, 512
%r273 = zext i512 %r261 to i544
%r274 = or i544 %r272, %r273
%r275 = zext i544 %r274 to i576
%r276 = zext i544 %r267 to i576
%r277 = add i576 %r275, %r276
%r278 = lshr i576 %r277, 32
%r279 = trunc i576 %r278 to i544
%r280 = lshr i544 %r279, 512
%r281 = trunc i544 %r280 to i32
%r282 = trunc i544 %r279 to i512
%r283 = trunc i512 %r282 to i32
%r284 = mul i32 %r283, %r6
%r285 = call i544 @mulPv512x32(i32* %r3, i32 %r284)
%r286 = zext i32 %r281 to i544
%r287 = shl i544 %r286, 512
%r288 = add i544 %r285, %r287
%r290 = getelementptr i32, i32* %r2, i32 29
%r291 = load i32, i32* %r290
%r292 = zext i32 %r291 to i544
%r293 = shl i544 %r292, 512
%r294 = zext i512 %r282 to i544
%r295 = or i544 %r293, %r294
%r296 = zext i544 %r295 to i576
%r297 = zext i544 %r288 to i576
%r298 = add i576 %r296, %r297
%r299 = lshr i576 %r298, 32
%r300 = trunc i576 %r299 to i544
%r301 = lshr i544 %r300, 512
%r302 = trunc i544 %r301 to i32
%r303 = trunc i544 %r300 to i512
%r304 = trunc i512 %r303 to i32
%r305 = mul i32 %r304, %r6
%r306 = call i544 @mulPv512x32(i32* %r3, i32 %r305)
%r307 = zext i32 %r302 to i544
%r308 = shl i544 %r307, 512
%r309 = add i544 %r306, %r308
%r311 = getelementptr i32, i32* %r2, i32 30
%r312 = load i32, i32* %r311
%r313 = zext i32 %r312 to i544
%r314 = shl i544 %r313, 512
%r315 = zext i512 %r303 to i544
%r316 = or i544 %r314, %r315
%r317 = zext i544 %r316 to i576
%r318 = zext i544 %r309 to i576
%r319 = add i576 %r317, %r318
%r320 = lshr i576 %r319, 32
%r321 = trunc i576 %r320 to i544
%r322 = lshr i544 %r321, 512
%r323 = trunc i544 %r322 to i32
%r324 = trunc i544 %r321 to i512
%r325 = trunc i512 %r324 to i32
%r326 = mul i32 %r325, %r6
%r327 = call i544 @mulPv512x32(i32* %r3, i32 %r326)
%r328 = zext i32 %r323 to i544
%r329 = shl i544 %r328, 512
%r330 = add i544 %r327, %r329
%r332 = getelementptr i32, i32* %r2, i32 31
%r333 = load i32, i32* %r332
%r334 = zext i32 %r333 to i544
%r335 = shl i544 %r334, 512
%r336 = zext i512 %r324 to i544
%r337 = or i544 %r335, %r336
%r338 = zext i544 %r337 to i576
%r339 = zext i544 %r330 to i576
%r340 = add i576 %r338, %r339
%r341 = lshr i576 %r340, 32
%r342 = trunc i576 %r341 to i544
%r343 = lshr i544 %r342, 512
%r344 = trunc i544 %r343 to i32
%r345 = trunc i544 %r342 to i512
%r346 = sub i512 %r345, %r9
%r347 = lshr i512 %r346, 511
%r348 = trunc i512 %r347 to i1
%r349 = select i1 %r348, i512 %r345, i512 %r346
%r351 = bitcast i32* %r1 to i512*
store i512 %r349, i512* %r351
ret void
}
define i32 @mcl_fp_addPre16L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i512*
%r7 = load i512, i512* %r6
%r8 = zext i512 %r7 to i544
%r10 = bitcast i32* %r4 to i512*
%r11 = load i512, i512* %r10
%r12 = zext i512 %r11 to i544
%r13 = add i544 %r8, %r12
%r14 = trunc i544 %r13 to i512
%r16 = bitcast i32* %r2 to i512*
store i512 %r14, i512* %r16
%r17 = lshr i544 %r13, 512
%r18 = trunc i544 %r17 to i32
ret i32 %r18
}
define i32 @mcl_fp_subPre16L(i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r3 to i512*
%r7 = load i512, i512* %r6
%r8 = zext i512 %r7 to i544
%r10 = bitcast i32* %r4 to i512*
%r11 = load i512, i512* %r10
%r12 = zext i512 %r11 to i544
%r13 = sub i544 %r8, %r12
%r14 = trunc i544 %r13 to i512
%r16 = bitcast i32* %r2 to i512*
store i512 %r14, i512* %r16
%r18 = lshr i544 %r13, 512
%r19 = trunc i544 %r18 to i32
%r20 = and i32 %r19, 1
ret i32 %r20
}
define void @mcl_fp_shr1_16L(i32* noalias  %r1, i32* noalias  %r2)
{
%r4 = bitcast i32* %r2 to i512*
%r5 = load i512, i512* %r4
%r6 = lshr i512 %r5, 1
%r8 = bitcast i32* %r1 to i512*
store i512 %r6, i512* %r8
ret void
}
define void @mcl_fp_add16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = zext i512 %r7 to i544
%r12 = zext i512 %r10 to i544
%r13 = add i544 %r11, %r12
%r15 = bitcast i32* %r4 to i512*
%r16 = load i512, i512* %r15
%r17 = zext i512 %r16 to i544
%r18 = sub i544 %r13, %r17
%r19 = lshr i544 %r18, 512
%r20 = trunc i544 %r19 to i1
%r21 = select i1 %r20, i544 %r13, i544 %r18
%r22 = trunc i544 %r21 to i512
%r24 = bitcast i32* %r1 to i512*
store i512 %r22, i512* %r24
ret void
}
define void @mcl_fp_addNF16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = add i512 %r7, %r10
%r13 = bitcast i32* %r4 to i512*
%r14 = load i512, i512* %r13
%r15 = sub i512 %r11, %r14
%r16 = lshr i512 %r15, 511
%r17 = trunc i512 %r16 to i1
%r18 = select i1 %r17, i512 %r11, i512 %r15
%r20 = bitcast i32* %r1 to i512*
store i512 %r18, i512* %r20
ret void
}
define void @mcl_fp_sub16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = zext i512 %r7 to i513
%r12 = zext i512 %r10 to i513
%r13 = sub i513 %r11, %r12
%r14 = lshr i513 %r13, 512
%r15 = trunc i513 %r14 to i1
%r16 = trunc i513 %r13 to i512
%r18 = bitcast i32* %r4 to i512*
%r19 = load i512, i512* %r18
%r21 = select i1 %r15, i512 %r19, i512 0
%r22 = add i512 %r16, %r21
%r24 = bitcast i32* %r1 to i512*
store i512 %r22, i512* %r24
ret void
}
define void @mcl_fp_subNF16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i512*
%r7 = load i512, i512* %r6
%r9 = bitcast i32* %r3 to i512*
%r10 = load i512, i512* %r9
%r11 = sub i512 %r7, %r10
%r12 = lshr i512 %r11, 511
%r13 = trunc i512 %r12 to i1
%r15 = bitcast i32* %r4 to i512*
%r16 = load i512, i512* %r15
%r18 = select i1 %r13, i512 %r16, i512 0
%r19 = add i512 %r11, %r18
%r21 = bitcast i32* %r1 to i512*
store i512 %r19, i512* %r21
ret void
}
define void @mcl_fpDbl_add16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i1024*
%r7 = load i1024, i1024* %r6
%r9 = bitcast i32* %r3 to i1024*
%r10 = load i1024, i1024* %r9
%r11 = zext i1024 %r7 to i1056
%r12 = zext i1024 %r10 to i1056
%r13 = add i1056 %r11, %r12
%r14 = trunc i1056 %r13 to i512
%r16 = bitcast i32* %r1 to i512*
store i512 %r14, i512* %r16
%r17 = lshr i1056 %r13, 512
%r18 = trunc i1056 %r17 to i544
%r20 = bitcast i32* %r4 to i512*
%r21 = load i512, i512* %r20
%r22 = zext i512 %r21 to i544
%r23 = sub i544 %r18, %r22
%r24 = lshr i544 %r23, 512
%r25 = trunc i544 %r24 to i1
%r26 = select i1 %r25, i544 %r18, i544 %r23
%r27 = trunc i544 %r26 to i512
%r29 = getelementptr i32, i32* %r1, i32 16
%r31 = bitcast i32* %r29 to i512*
store i512 %r27, i512* %r31
ret void
}
define void @mcl_fpDbl_sub16L(i32* noalias  %r1, i32* noalias  %r2, i32* noalias  %r3, i32* noalias  %r4)
{
%r6 = bitcast i32* %r2 to i1024*
%r7 = load i1024, i1024* %r6
%r9 = bitcast i32* %r3 to i1024*
%r10 = load i1024, i1024* %r9
%r11 = zext i1024 %r7 to i1056
%r12 = zext i1024 %r10 to i1056
%r13 = sub i1056 %r11, %r12
%r14 = trunc i1056 %r13 to i512
%r16 = bitcast i32* %r1 to i512*
store i512 %r14, i512* %r16
%r17 = lshr i1056 %r13, 512
%r18 = trunc i1056 %r17 to i512
%r19 = lshr i1056 %r13, 1024
%r20 = trunc i1056 %r19 to i1
%r22 = bitcast i32* %r4 to i512*
%r23 = load i512, i512* %r22
%r25 = select i1 %r20, i512 %r23, i512 0
%r26 = add i512 %r18, %r25
%r28 = getelementptr i32, i32* %r1, i32 16
%r30 = bitcast i32* %r28 to i512*
store i512 %r26, i512* %r30
ret void
}
